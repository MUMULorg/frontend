{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\mumul_frontend\\\\mumul\\\\src\\\\component\\\\SendComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport More from \"./../img/icon/icMore.png\";\nimport Bin from \"./../img/icon/icBin.png\";\nimport { getSpaceInfo } from \"../api/getSpaceInfo\";\nimport Delete from \"./popup/QDelete\";\nimport ADelete from \"./popup/ADelete\";\nimport UntilAnswering from \"./UntilAnswering\";\nimport AnonymousAnswer from \"./AnonymousAnswer\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\"; // 한국어\nimport AnswerBtn from \"./AnswerButton\";\nimport Profile2 from \"./../img/Ellipse 104.png\";\nimport Loading from \"./Loading\";\nimport { getPSentComment } from \"../api/Q&A/getPSentComment\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SendComment({\n  spaceId,\n  info,\n  currentUserInfo\n}) {\n  _s();\n  const [page, setPage] = useState(0); // 페이지 번호 상태값 추가\n  const [pageSize, setPageSize] = useState(5); // 페이지 크기 상태값 추가\n  const [loading, setLoading] = useState(false); // 로딩 상태값 추가\n  const [allDataFetched, setAllDataFetched] = useState(false); // 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\n  const [fetchingMoreData, setFetchingMoreData] = useState(false);\n  const [sentComments, setSentComments] = useState([]);\n  // 답변 삭제 상태값\n  const [a_deleteStates, a_setDeleteStates] = useState({});\n  const [spaceOwner, setSpaceOwner] = useState({\n    userId: \"\",\n    picture: \"\",\n    name: \"\"\n  });\n\n  // 질문 공유 상태값\n  const [shareStates, setShareStates] = useState({});\n  //삭제 상태값\n  const [del, setDelete] = useState(false);\n\n  //질문 삭제 모달 오픈 상태값\n  const [delModal, setDelModal] = useState(false);\n  //답변 삭제 모달 오픈 상태값\n  const [a_delModal, a_setDelModal] = useState(false);\n\n  // 선택한 질문의 고유 ID를 상태값에 저장\n  const [selectedQuestionId, setSelectedQuestionId] = useState([]);\n  // 선택한 답변의 고유 ID를 상태값에 저장\n  const [selectedAnswerId, setSelectedAnswerId] = useState([]);\n  const [selectedSpaceId, setSelectedSpaceId] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState([]);\n  // 질문 삭제 상태값\n  const [deleteStates, setDeleteStates] = useState({});\n\n  // 익명질문만 존재값\n  const [hasOnlyAnonymousQuestions, setHasOnlyAnonymousQuestions] = useState(false);\n  const fetchData = async (isInitialFetch = true) => {\n    try {\n      setLoading(true);\n\n      // isInitialFetch가 true일 경우에만 페이지 번호를 초기화\n      if (isInitialFetch) {\n        setPage(0);\n      }\n      const spaInfo = await getSpaceInfo(spaceId);\n      const response = await getPSentComment(spaceId, page, pageSize);\n      const newComments = isInitialFetch ? response.data : [...sentComments, ...response.data];\n      setSentComments(newComments);\n      setSpaceOwner(spaInfo);\n\n      // deleteStates 배열을 모든 질문에 대해 초기화\n      const initialDeleteStates = newComments.map(() => false);\n      setDeleteStates(initialDeleteStates);\n      a_setDeleteStates(initialDeleteStates);\n      setShareStates(initialDeleteStates);\n\n      // 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\n      if (response.data.length === 0) {\n        setAllDataFetched(true);\n      }\n\n      //모든 질문이 익명 질문이면 변수 true로 설정\n      const hasOnlyAnonymousQuestions = response.data.length > 0 && response.data.every(sent => sent.isAnonymous === true);\n      setHasOnlyAnonymousQuestions(hasOnlyAnonymousQuestions);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching data: \", error);\n    }\n  };\n  const spinnerRef = useRef(null);\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spaceId, pageSize]);\n  useEffect(() => {\n    const fetchDataOnScroll = async () => {\n      if (!fetchingMoreData && !allDataFetched) {\n        setFetchingMoreData(true);\n        const response = await getPSentComment(spaceId, page + 1, pageSize);\n        setFetchingMoreData(false);\n        if (response.data.length === 0) {\n          setAllDataFetched(true);\n          return; // 더 이상 데이터를 불러올 필요가 없으므로 종료\n        }\n        setSentComments(prevData => [...prevData, ...response.data.map(item => ({\n          ...item,\n          key: item.id\n        }))]);\n        setPage(prevPage => prevPage + 1);\n      }\n    };\n    const handleScroll = () => {\n      const scrollY = window.scrollY;\n      const windowHeight = window.innerHeight;\n      const contentHeight = document.body.scrollHeight;\n      if (scrollY >= contentHeight - windowHeight - 200) {\n        fetchDataOnScroll();\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [spaceId, page, pageSize, allDataFetched, fetchingMoreData]);\n\n  // 클릭한 질문에 대한 삭제 상태값 변경\n  const clickMore = index => {\n    setDeleteStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 클릭한 답변에 대한 삭제 상태값 변경\n  const clickMore_1 = index => {\n    a_setDeleteStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 질문 삭제하기 클릭 시 모달 오픈\n  const showDelModal = (questionId, spaceId, userId) => {\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\n    setDelModal(true);\n  };\n\n  // 답변 삭제하기 클릭 시 모달 오픈\n  const a_showDelModal = (answerId, spaceId, userId) => {\n    setSelectedAnswerId(answerId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\n    a_setDelModal(true);\n  };\n\n  // 삭제 팝업  닫기\n  const onClose = () => {\n    setDelModal(false);\n    setDelete(false);\n    a_setDelModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [sentComments.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileArea\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: spaceOwner.picture,\n            alt: \"profile1\",\n            className: \"pre_questioner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cnt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_Nickname\",\n            children: spaceOwner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_min\",\n            children: \"\\uC5B8\\uC820\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_commentCnt\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"link\",\n              children: \"\\uBCF4\\uB0B8 \\uC9C8\\uBB38\\uC774 \\uC5C6\\uC5B4\\uC694\\uD83E\\uDD16 \\uCCAB \\uBB34\\uBB3C\\uC744 \\uB0A8\\uACA8 \\uBCF4\\uC138\\uC694!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 10\n      }, this)\n    }, void 0, false), hasOnlyAnonymousQuestions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentUserInfo.userId !== spaceOwner.userId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pre commentWrap questionWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileArea\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: spaceOwner.picture,\n            alt: \"profile1\",\n            className: \"pre_questioner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cnt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_Nickname\",\n            children: spaceOwner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_min\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"link\",\n              children: \"\\uC5B8\\uC820\\uAC00\\uD83D\\uDD12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_commentCnt\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"link\",\n              children: \"\\uBCF4\\uB0B8 \\uC9C8\\uBB38\\uC774 \\uC5C6\\uC5B4\\uC694\\uD83E\\uDD16 \\uCCAB \\uBB34\\uBB3C\\uC744 \\uB0A8\\uACA8 \\uBCF4\\uC138\\uC694!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false), sentComments.slice().filter(sent => {\n      // 현재 로그인한 유저가 질문 보낸 유저가 아니라면\n      if (currentUserInfo.userId !== sent.sendingUserId) {\n        // isAnonymous가 false인 sent만 반환\n        return sent.isAnonymous === false;\n      }\n      return true;\n    }).map((sent, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: sent.answers.length > 0 ? \"commentWrap questionWrap\" : \"pre\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileArea\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sent.sentUserPic,\n            alt: \"profile1\",\n            className: `questioner ${sent.isAnonymous ? \"anonymous\" : \"\"}`,\n            onClick: () => {\n              if (spaceId !== sent.sendingUserId.toString()) {\n                window.location.href = `/${sent.sendingUserId}`;\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cnt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Nicname\",\n            children: sent.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"min\",\n            children: getTimeDifference(sent.createdTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commentCnt\",\n            children: [\" \", sent.questionText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more\",\n            children: [currentUserInfo.userId === spaceOwner.userId || currentUserInfo.userId === sent.sendingUserId ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: More,\n              alt: \"more\",\n              onClick: () => clickMore(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 21\n            }, this) : \"\", deleteStates[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"del\",\n              onClick: () => showDelModal(sent.id, spaceId, currentUserInfo.userId),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Bin,\n                  alt: \"btin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this), \"\\uC0AD\\uC81C\\uD558\\uAE30\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentWrap answerWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileArea\",\n          children: sent.answers.length === 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sent.receivedUserPic,\n            alt: \"profile2\",\n            className: \"pre_questioner\",\n            onClick: () => window.location.href = `/${sent.receivingUserId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sent.receivedUserPic,\n            alt: \"profile2\",\n            className: \"respondent\",\n            onClick: () => window.location.href = `/${sent.answers[0].userId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cnt\",\n          children: [sent.answers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_Nickname\",\n            children: sent.receivedUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Nicname\",\n            children: sent.receivedUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 19\n          }, this), sent.answers.length === 0 ? /*#__PURE__*/_jsxDEV(UntilAnswering, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"min\",\n              children: getTimeDifference(sent.answers[0].createdTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(AnonymousAnswer, {\n              question: sent,\n              answers: sent.answers,\n              currentUserInfo: currentUserInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), sent.answers.length === 0 ? \"\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"more\",\n              children: [currentUserInfo.userId === sent.answers[0].userId ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: More,\n                alt: \"more\",\n                onClick: () => clickMore_1(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 25\n              }, this) : \"\", a_deleteStates[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"del\",\n                onClick: () => a_showDelModal(sent.answers[0].id, spaceId, currentUserInfo.userId),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Bin,\n                    alt: \"btin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 29\n                  }, this), \"\\uC0AD\\uC81C\\uD558\\uAE30\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), delModal && /*#__PURE__*/_jsxDEV(Delete, {\n          questionId: selectedQuestionId,\n          spaceId: selectedSpaceId // 스페이스 ID 전달\n          ,\n          userId: selectedUserId // 유저 ID 전달\n          ,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 17\n        }, this), a_delModal && /*#__PURE__*/_jsxDEV(ADelete, {\n          answerId: selectedAnswerId,\n          spaceId: selectedSpaceId // 스페이스 ID 전달\n          ,\n          userId: selectedUserId // 유저 ID 전달\n          ,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this)]\n    }, sent.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }, this)), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: spinnerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SendComment, \"3i8F0e+PA//9dt562C6lU4/dtsM=\");\n_c = SendComment;\nSendComment.propTypes = {\n  spaceId: PropTypes.string.isRequired,\n  info: PropTypes.object.isRequired,\n  currentUserInfo: PropTypes.object.isRequired\n};\nexport default SendComment;\n\n// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\nfunction getTimeDifference(createdTime) {\n  return moment(createdTime).locale(\"ko\").fromNow();\n}\nvar _c;\n$RefreshReg$(_c, \"SendComment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","More","Bin","getSpaceInfo","Delete","ADelete","UntilAnswering","AnonymousAnswer","moment","AnswerBtn","Profile2","Loading","getPSentComment","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","SendComment","spaceId","info","currentUserInfo","_s","page","setPage","pageSize","setPageSize","loading","setLoading","allDataFetched","setAllDataFetched","fetchingMoreData","setFetchingMoreData","sentComments","setSentComments","a_deleteStates","a_setDeleteStates","spaceOwner","setSpaceOwner","userId","picture","name","shareStates","setShareStates","del","setDelete","delModal","setDelModal","a_delModal","a_setDelModal","selectedQuestionId","setSelectedQuestionId","selectedAnswerId","setSelectedAnswerId","selectedSpaceId","setSelectedSpaceId","selectedUserId","setSelectedUserId","deleteStates","setDeleteStates","hasOnlyAnonymousQuestions","setHasOnlyAnonymousQuestions","fetchData","isInitialFetch","spaInfo","response","newComments","data","initialDeleteStates","map","length","every","sent","isAnonymous","error","console","spinnerRef","fetchDataOnScroll","prevData","item","key","id","prevPage","handleScroll","scrollY","window","windowHeight","innerHeight","contentHeight","document","body","scrollHeight","addEventListener","removeEventListener","clickMore","index","prevStates","newStates","clickMore_1","showDelModal","questionId","a_showDelModal","answerId","onClose","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","role","slice","filter","sendingUserId","answers","sentUserPic","onClick","toString","location","href","getTimeDifference","createdTime","questionText","receivedUserPic","receivingUserId","receivedUserName","question","ref","_c","propTypes","string","isRequired","object","locale","fromNow","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/component/SendComment.js"],"sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport More from \"./../img/icon/icMore.png\";\r\nimport Bin from \"./../img/icon/icBin.png\";\r\nimport { getSpaceInfo } from \"../api/getSpaceInfo\";\r\nimport Delete from \"./popup/QDelete\";\r\nimport ADelete from \"./popup/ADelete\";\r\nimport UntilAnswering from \"./UntilAnswering\";\r\nimport AnonymousAnswer from \"./AnonymousAnswer\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\"; // 한국어\r\nimport AnswerBtn from \"./AnswerButton\";\r\nimport Profile2 from \"./../img/Ellipse 104.png\";\r\nimport Loading from \"./Loading\";\r\nimport { getPSentComment } from \"../api/Q&A/getPSentComment\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SendComment({ spaceId, info, currentUserInfo }) {\r\n  const [page, setPage] = useState(0); // 페이지 번호 상태값 추가\r\n  const [pageSize, setPageSize] = useState(5); // 페이지 크기 상태값 추가\r\n  const [loading, setLoading] = useState(false); // 로딩 상태값 추가\r\n  const [allDataFetched, setAllDataFetched] = useState(false); // 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\r\n  const [fetchingMoreData, setFetchingMoreData] = useState(false);\r\n  const [sentComments, setSentComments] = useState([]);\r\n  // 답변 삭제 상태값\r\n  const [a_deleteStates, a_setDeleteStates] = useState({});\r\n\r\n  const [spaceOwner, setSpaceOwner] = useState({\r\n    userId: \"\",\r\n    picture: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  // 질문 공유 상태값\r\n  const [shareStates, setShareStates] = useState({});\r\n  //삭제 상태값\r\n  const [del, setDelete] = useState(false);\r\n\r\n  //질문 삭제 모달 오픈 상태값\r\n  const [delModal, setDelModal] = useState(false);\r\n  //답변 삭제 모달 오픈 상태값\r\n  const [a_delModal, a_setDelModal] = useState(false);\r\n\r\n  // 선택한 질문의 고유 ID를 상태값에 저장\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState([]);\r\n  // 선택한 답변의 고유 ID를 상태값에 저장\r\n  const [selectedAnswerId, setSelectedAnswerId] = useState([]);\r\n  const [selectedSpaceId, setSelectedSpaceId] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState([]);\r\n  // 질문 삭제 상태값\r\n  const [deleteStates, setDeleteStates] = useState({});\r\n\r\n  // 익명질문만 존재값\r\n  const [hasOnlyAnonymousQuestions, setHasOnlyAnonymousQuestions] =\r\n    useState(false);\r\n\r\n  const fetchData = async (isInitialFetch = true) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // isInitialFetch가 true일 경우에만 페이지 번호를 초기화\r\n      if (isInitialFetch) {\r\n        setPage(0);\r\n      }\r\n\r\n      const spaInfo = await getSpaceInfo(spaceId);\r\n      const response = await getPSentComment(spaceId, page, pageSize);\r\n\r\n      const newComments = isInitialFetch\r\n        ? response.data\r\n        : [...sentComments, ...response.data];\r\n      setSentComments(newComments);\r\n      setSpaceOwner(spaInfo);\r\n\r\n      // deleteStates 배열을 모든 질문에 대해 초기화\r\n      const initialDeleteStates = newComments.map(() => false);\r\n      setDeleteStates(initialDeleteStates);\r\n      a_setDeleteStates(initialDeleteStates);\r\n      setShareStates(initialDeleteStates);\r\n\r\n      // 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\r\n      if (response.data.length === 0) {\r\n        setAllDataFetched(true);\r\n      }\r\n\r\n      //모든 질문이 익명 질문이면 변수 true로 설정\r\n      const hasOnlyAnonymousQuestions =\r\n        response.data.length > 0 &&\r\n        response.data.every((sent) => sent.isAnonymous === true);\r\n      setHasOnlyAnonymousQuestions(hasOnlyAnonymousQuestions);\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching data: \", error);\r\n    }\r\n  };\r\n\r\n  const spinnerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [spaceId, pageSize]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataOnScroll = async () => {\r\n      if (!fetchingMoreData && !allDataFetched) {\r\n        setFetchingMoreData(true);\r\n\r\n        const response = await getPSentComment(spaceId, page + 1, pageSize);\r\n\r\n        setFetchingMoreData(false);\r\n\r\n        if (response.data.length === 0) {\r\n          setAllDataFetched(true);\r\n          return; // 더 이상 데이터를 불러올 필요가 없으므로 종료\r\n        }\r\n\r\n        setSentComments((prevData) => [\r\n          ...prevData,\r\n          ...response.data.map((item) => ({ ...item, key: item.id })),\r\n        ]);\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const scrollY = window.scrollY;\r\n      const windowHeight = window.innerHeight;\r\n      const contentHeight = document.body.scrollHeight;\r\n\r\n      if (scrollY >= contentHeight - windowHeight - 200) {\r\n        fetchDataOnScroll();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [spaceId, page, pageSize, allDataFetched, fetchingMoreData]);\r\n\r\n  // 클릭한 질문에 대한 삭제 상태값 변경\r\n  const clickMore = (index) => {\r\n    setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 클릭한 답변에 대한 삭제 상태값 변경\r\n  const clickMore_1 = (index) => {\r\n    a_setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 질문 삭제하기 클릭 시 모달 오픈\r\n  const showDelModal = (questionId, spaceId, userId) => {\r\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    setDelModal(true);\r\n  };\r\n\r\n  // 답변 삭제하기 클릭 시 모달 오픈\r\n  const a_showDelModal = (answerId, spaceId, userId) => {\r\n    setSelectedAnswerId(answerId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    a_setDelModal(true);\r\n  };\r\n\r\n  // 삭제 팝업  닫기\r\n  const onClose = () => {\r\n    setDelModal(false);\r\n    setDelete(false);\r\n    a_setDelModal(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {sentComments.length === 0 && (\r\n        <>\r\n         <div className=\"placeholder\">\r\n            <div className=\"profileArea\">\r\n              <img\r\n                src={spaceOwner.picture}\r\n                alt=\"profile1\"\r\n                className=\"pre_questioner\"\r\n              />\r\n            </div>\r\n            <div className=\"cnt\">\r\n              <p className=\"pre_Nickname\">{spaceOwner.name}</p>\r\n              <p className=\"pre_min\">언젠가</p>\r\n              <p className=\"pre_commentCnt\">\r\n              <span role=\"img\" aria-label=\"link\">\r\n                보낸 질문이 없어요🤖 첫 무물을 남겨 보세요!\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {hasOnlyAnonymousQuestions && (\r\n        <>\r\n          {currentUserInfo.userId !== spaceOwner.userId ? (\r\n            <div className=\"pre commentWrap questionWrap\">\r\n              <div className=\"profileArea\">\r\n                <img\r\n                  src={spaceOwner.picture}\r\n                  alt=\"profile1\"\r\n                  className=\"pre_questioner\"\r\n                />\r\n              </div>\r\n              <div className=\"cnt\">\r\n                <p className=\"pre_Nickname\">{spaceOwner.name}</p>\r\n                <p className=\"pre_min\">\r\n                <span role=\"img\" aria-label=\"link\">언젠가🔒</span></p>\r\n                <p className=\"pre_commentCnt\">\r\n                <span role=\"img\" aria-label=\"link\">\r\n                  보낸 질문이 없어요🤖 첫 무물을 남겨 보세요!\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      )}\r\n      {sentComments\r\n        .slice()\r\n        .filter((sent) => {\r\n          // 현재 로그인한 유저가 질문 보낸 유저가 아니라면\r\n          if (currentUserInfo.userId !== sent.sendingUserId) {\r\n            // isAnonymous가 false인 sent만 반환\r\n            return sent.isAnonymous === false;\r\n          }\r\n          return true;\r\n        })\r\n        .map((sent, index) => (\r\n          <React.Fragment key={sent.id}>\r\n            <div className={\r\n              sent.answers.length > 0\r\n                ? \"commentWrap questionWrap\"\r\n                : \"pre\"\r\n            }>\r\n              <div className=\"profileArea\">\r\n                <img\r\n                  src={sent.sentUserPic}\r\n                  alt=\"profile1\"\r\n                  className={`questioner ${\r\n                    sent.isAnonymous ? \"anonymous\" : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (spaceId !== sent.sendingUserId.toString()) {\r\n                      window.location.href = `/${sent.sendingUserId}`;\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cnt\">\r\n                <p className=\"Nicname\">{sent.userId}</p>\r\n                <p className=\"min\">{getTimeDifference(sent.createdTime)}</p>\r\n                <p className=\"commentCnt\"> {sent.questionText} </p>\r\n\r\n                <div className=\"more\">\r\n                  {currentUserInfo.userId === spaceOwner.userId ||\r\n                  currentUserInfo.userId === sent.sendingUserId ? (\r\n                    <img\r\n                      src={More}\r\n                      alt=\"more\"\r\n                      onClick={() => clickMore(index)}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {deleteStates[index] && (\r\n                    <div\r\n                      className=\"del\"\r\n                      onClick={() =>\r\n                        showDelModal(sent.id, spaceId, currentUserInfo.userId)\r\n                      }\r\n                    >\r\n                      <p>\r\n                        <img src={Bin} alt=\"btin\" />\r\n                        삭제하기\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"commentWrap answerWrap\">\r\n              <div className=\"profileArea\">\r\n                {sent.answers.length === 0 ? (\r\n                  <img\r\n                    src={sent.receivedUserPic}\r\n                    alt=\"profile2\"\r\n                    className=\"pre_questioner\"\r\n                    onClick={() =>\r\n                      (window.location.href = `/${sent.receivingUserId}`)\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={sent.receivedUserPic}\r\n                    alt=\"profile2\"\r\n                    className=\"respondent\"\r\n                    onClick={() =>\r\n                      (window.location.href = `/${sent.answers[0].userId}`)\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"cnt\">\r\n                {sent.answers.length === 0 ? (\r\n                  <p className=\"pre_Nickname\">{sent.receivedUserName}</p>\r\n                ) : (\r\n                  <p className=\"Nicname\">{sent.receivedUserName}</p>\r\n                )}\r\n\r\n                {sent.answers.length === 0 ? (\r\n                  <UntilAnswering></UntilAnswering>\r\n                ) : (\r\n                  <>\r\n                    <p className=\"min\">\r\n                      {getTimeDifference(sent.answers[0].createdTime)}\r\n                    </p>\r\n                    <AnonymousAnswer\r\n                      question={sent}\r\n                      answers={sent.answers}\r\n                      currentUserInfo={currentUserInfo}\r\n                    />\r\n                  </>\r\n                )}\r\n                {sent.answers.length === 0 ? (\r\n                  \"\"\r\n                ) : (\r\n                  <>\r\n                    <div className=\"more\">\r\n                      {currentUserInfo.userId === sent.answers[0].userId ? (\r\n                        <img\r\n                          src={More}\r\n                          alt=\"more\"\r\n                          onClick={() => clickMore_1(index)}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      {a_deleteStates[index] && (\r\n                        <div\r\n                          className=\"del\"\r\n                          onClick={() =>\r\n                            a_showDelModal(\r\n                              sent.answers[0].id,\r\n                              spaceId,\r\n                              currentUserInfo.userId\r\n                            )\r\n                          }\r\n                        >\r\n                          <p>\r\n                            <img src={Bin} alt=\"btin\" />\r\n                            삭제하기\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {/* 질문 삭제하기 팝업  */}\r\n              {delModal && (\r\n                <Delete\r\n                  questionId={selectedQuestionId}\r\n                  spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                  userId={selectedUserId} // 유저 ID 전달\r\n                  onClose={onClose}\r\n                ></Delete>\r\n              )}\r\n\r\n              {/* 답변 삭제하기 팝업  */}\r\n              {a_delModal && (\r\n                <ADelete\r\n                  answerId={selectedAnswerId}\r\n                  spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                  userId={selectedUserId} // 유저 ID 전달\r\n                  onClose={onClose}\r\n                ></ADelete>\r\n              )}\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      {loading && <Loading />}\r\n      <div ref={spinnerRef} />\r\n    </>\r\n  );\r\n}\r\n\r\nSendComment.propTypes = {\r\n  spaceId: PropTypes.string.isRequired,\r\n  info: PropTypes.object.isRequired,\r\n  currentUserInfo: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default SendComment;\r\n\r\n// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\r\nfunction getTimeDifference(createdTime) {\r\n  return moment(createdTime).locale(\"ko\").fromNow();\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}