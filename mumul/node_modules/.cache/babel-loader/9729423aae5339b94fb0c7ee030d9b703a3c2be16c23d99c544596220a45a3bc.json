{"ast":null,"code":"import React,{useRef,useState,useEffect}from\"react\";import Close from\"../../img/icon/close.png\";import{putUserProfileEdit}from\"../../api/putUserProfileEdit\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProfileEdit(_ref){let{onClose,currentUserInfo}=_ref;const[selectedFile,setSelectedFile]=useState(null);const[previewUrl,setPreviewUrl]=useState(currentUserInfo.picture);const nicknameInput=useRef();const introduceInput=useRef();const snsInput=useRef();const linkInput=useRef();const imageInput=useRef();useEffect(()=>{if(selectedFile){const reader=new FileReader();reader.onload=()=>{setPreviewUrl(reader.result);};reader.readAsDataURL(selectedFile);}},[selectedFile]);const onClickInput=()=>{imageInput.current.click();};const handleFileChange=event=>{const file=event.target.files[0];const maxSizeInBytes=1048576;// 1MB 이하로 설정 (1MB = 1048576 바이트)\nif(file&&file.size>maxSizeInBytes){alert(\"파일 크기가 너무 큽니다. 1MB 이하의 파일을 업로드해주세요.\");event.target.files[0]=null;// 파일 선택 초기화\n}else{setSelectedFile(file);// 파일 크기가 제한 이하일 때, selectedFile 상태를 업데이트합니다.\n}};const handleSubmit=async event=>{event.preventDefault();const formData=new FormData();if(selectedFile){formData.append(\"imgFile\",selectedFile);// Append the image file to the FormData if it exists\n}const data={info:{id:currentUserInfo.userId,name:nicknameInput.current.value,introduce:introduceInput.current.value,instaId:snsInput.current.value,link:linkInput.current.value}};formData.append(\"requestDto\",new Blob([JSON.stringify(data.info)],{type:\"application/json\"}));await putUserProfileEdit(currentUserInfo.userId,formData);};return/*#__PURE__*/_jsx(\"div\",{className:\"popupWrap\",children:/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popupContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"popupHeader\",children:/*#__PURE__*/_jsx(\"img\",{src:Close,alt:\"close\",onClick:onClose})}),/*#__PURE__*/_jsx(\"div\",{className:\"profilePopup\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profileArea\",children:[previewUrl?/*#__PURE__*/_jsx(\"img\",{src:previewUrl,alt:\"myprofile\"}):/*#__PURE__*/_jsx(\"img\",{src:currentUserInfo.picture,alt:\"myprofile\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editTxt\",onClick:onClickInput,children:\"Edit\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",ref:imageInput,className:\"fileInput\",onChange:handleFileChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"inputWrap\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"Nickname\",children:\"\\uB2C9\\uB124\\uC784\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:currentUserInfo.name,id:\"Nickname\",ref:nicknameInput}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"introduce\",children:\"\\uC18C\\uAC1C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:currentUserInfo.introduce,id:\"introduce\",ref:introduceInput}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sns\",children:\"\\uC778\\uC2A4\\uD0C0\\uADF8\\uB7A8 \\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:currentUserInfo.instaId,id:\"sns\",ref:snsInput}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"link\",children:\"\\uB9C1\\uD06C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"link\",ref:linkInput,defaultValue:currentUserInfo.link})]}),/*#__PURE__*/_jsx(\"div\",{className:\"btn\",children:/*#__PURE__*/_jsx(\"button\",{className:\"editProfile active\",type:\"submit\",onClick:event=>{handleSubmit(event);// event 객체를 전달하여 handleSubmit 함수 호출\nsetTimeout(()=>window.location.reload(),1000);},children:\"\\uC218\\uC815\\uD558\\uAE30\"})})]})]})})]})})});}export default ProfileEdit;","map":{"version":3,"names":["React","useRef","useState","useEffect","Close","putUserProfileEdit","jsx","_jsx","jsxs","_jsxs","ProfileEdit","_ref","onClose","currentUserInfo","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","picture","nicknameInput","introduceInput","snsInput","linkInput","imageInput","reader","FileReader","onload","result","readAsDataURL","onClickInput","current","click","handleFileChange","event","file","target","files","maxSizeInBytes","size","alert","handleSubmit","preventDefault","formData","FormData","append","data","info","id","userId","name","value","introduce","instaId","link","Blob","JSON","stringify","type","className","children","src","alt","onClick","onSubmit","accept","ref","onChange","htmlFor","defaultValue","setTimeout","window","location","reload"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/component/popup/ProfileEdit.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport Close from \"../../img/icon/close.png\";\r\nimport { putUserProfileEdit } from \"../../api/putUserProfileEdit\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ProfileEdit({ onClose, currentUserInfo }) {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(currentUserInfo.picture);\r\n  const nicknameInput = useRef();\r\n  const introduceInput = useRef();\r\n  const snsInput = useRef();\r\n  const linkInput = useRef();\r\n  const imageInput = useRef();\r\n\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setPreviewUrl(reader.result);\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n    }\r\n  }, [selectedFile]);\r\n\r\n  const onClickInput = () => {\r\n    imageInput.current.click();\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const maxSizeInBytes = 1048576; // 1MB 이하로 설정 (1MB = 1048576 바이트)\r\n\r\n    if (file && file.size > maxSizeInBytes) {\r\n      alert(\"파일 크기가 너무 큽니다. 1MB 이하의 파일을 업로드해주세요.\");\r\n      event.target.files[0] = null; // 파일 선택 초기화\r\n    } else {\r\n      setSelectedFile(file); // 파일 크기가 제한 이하일 때, selectedFile 상태를 업데이트합니다.\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    if (selectedFile) {\r\n      formData.append(\"imgFile\", selectedFile); // Append the image file to the FormData if it exists\r\n    }\r\n   \r\n\r\n    const data = {\r\n      info: {\r\n        id: currentUserInfo.userId,\r\n        name: nicknameInput.current.value,\r\n        introduce: introduceInput.current.value,\r\n        instaId: snsInput.current.value,\r\n        link: linkInput.current.value,\r\n      },\r\n    };\r\n\r\n    formData.append(\r\n      \"requestDto\",\r\n      new Blob([JSON.stringify(data.info)], { type: \"application/json\" })\r\n    );\r\n\r\n    await putUserProfileEdit(currentUserInfo.userId, formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"popupWrap\">\r\n      <div className=\"popup\">\r\n        <div className=\"popupContainer\">\r\n          <div className=\"popupHeader\">\r\n            <img src={Close} alt=\"close\" onClick={onClose} />\r\n          </div>\r\n          <div className=\"profilePopup\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"profileArea\">\r\n                {previewUrl ? (\r\n                  <img src={previewUrl} alt=\"myprofile\" />\r\n                ) : (\r\n                  <img src={currentUserInfo.picture} alt=\"myprofile\" />\r\n                )}\r\n                <span className=\"editTxt\" onClick={onClickInput}>\r\n                  Edit\r\n                </span>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  ref={imageInput}\r\n                  className=\"fileInput\"\r\n                  onChange={handleFileChange}\r\n                />\r\n              </div>\r\n              <div className=\"inputWrap\">\r\n                <div>\r\n                  <label htmlFor=\"Nickname\">닉네임</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={currentUserInfo.name}\r\n                    id=\"Nickname\"\r\n                    ref={nicknameInput}\r\n                  />\r\n                  <label htmlFor=\"introduce\">소개</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={currentUserInfo.introduce}\r\n                    id=\"introduce\"\r\n                    ref={introduceInput}\r\n                  />\r\n                  <label htmlFor=\"sns\">인스타그램 아이디</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={currentUserInfo.instaId}\r\n                    id=\"sns\"\r\n                    ref={snsInput}\r\n                  />\r\n                  <label htmlFor=\"link\">링크</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"link\"\r\n                    ref={linkInput}\r\n                    defaultValue={currentUserInfo.link}\r\n                  />\r\n                </div>\r\n                <div className=\"btn\">\r\n                  <button\r\n                    className=\"editProfile active\"\r\n                    type=\"submit\"\r\n                    onClick={(event) => {\r\n                      handleSubmit(event); // event 객체를 전달하여 handleSubmit 함수 호출\r\n                      setTimeout(() => window.location.reload(), 1000);\r\n                    }}\r\n                  >\r\n                    수정하기\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfileEdit.propTypes={\r\n  onClose: PropTypes.any.isRequired,\r\n  currentUserInfo: PropTypes.any.isRequired,  \r\n}\r\n\r\nexport default ProfileEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}