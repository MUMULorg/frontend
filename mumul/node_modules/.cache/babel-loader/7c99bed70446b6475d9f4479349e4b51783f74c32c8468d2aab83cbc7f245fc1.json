{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\mumul_frontend\\\\mumul\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import { postLoginToken } from \"../api/postLoginToken\";\n// import {GoogleLogin} from \"@react-oauth/google\";\n// import {GoogleOAuthProvider} from \"@react-oauth/google\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport Rabbit from \"./../img/Group 12.png\";\nimport { getUserInfo } from \"../api/getUserInfo\";\nimport Goggle from \"./../img/icon/icGoggle.png\";\nimport Cacao from \"./../img/icon/icCacao.png\";\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  isLogin,\n  setIsLogin,\n  hasRequestedCallback,\n  setHasRequestedCallback\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const KAKAO_AUTH_URL = \"https://kauth.kakao.com/oauth/authorize?client_id=d2c26f36c69325cd253b8d0b68802286&redirect_uri=https://mumul.site/login/kakao&response_type=code\";\n  const GoogleSocialLogin = useGoogleLogin({\n    scope: \"email profile\",\n    ux_mode: \"redirect\",\n    // redirect_uri: \"http://localhost:3000/login\",\n    flow: \"auth-code\"\n  });\n  const kakaoLogin = () => {\n    window.location.href = KAKAO_AUTH_URL;\n  };\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const codeFromURL = queryParams.get(\"code\");\n    console.log(\" codeFromURL: \", codeFromURL);\n    console.log(\"login.js 로그인여부 1 : \" + isLogin);\n    if (!isLogin && !hasRequestedCallback && codeFromURL) {\n      console.log(\"Login 로그인 false여서 로그인 실행함 1\");\n      setHasRequestedCallback(true);\n      console.log(\"Login 로그인 false여서 로그인 실행함 2\");\n      axios.get(`https://api-mumul.site/v1/oauth/login/callback?code=${codeFromURL}`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true,\n        //-> cors 문제 해결 위해 일단 주석처리\n        crossDomain: true\n      }).then(response => {\n        if (response.status === 200) {\n          console.log(\"Login 전체 응답: \", response.data);\n          console.log(\"Authorization 헤더 출력: \", response.headers.get('Authorization'));\n          console.log(\"Authorization 헤더값 존재여부: \", response.headers.has('Authorization'));\n          const authToken = response.headers['Authorization']; // 응답헤더에서 토큰 받기\n\n          const authToken_ = response.headers.get('Authorization');\n          console.log(\"Login 의 authToken: \", authToken);\n          console.log(\"Login 의 authToken_: \", authToken_);\n          console.log(\"res.headers['authorization']: \", response.headers['authorization']);\n          console.log(\"response.headers.get('authorization'): \", response.headers.get('authorization'));\n          console.log(\"headers 전체 출력: \", response.headers);\n          localStorage.setItem('token', authToken_);\n\n          // axios.defaults.headers.common[\n          //   'Authorization'\n          // ] = `Bearer ${authToken}`;\n\n          console.log(\"Login 로그인 false여서 로그인 실행함 5\");\n          setIsLogin(true);\n          console.log(\"Login 로그인 false여서 로그인 실행함 6\");\n          console.log(\"Login true됨\");\n        }\n      }).catch(error => {\n        if (error.response) {\n          console.error('에러의 응답:', error.response);\n          //do something\n        } else if (error.request) {\n          console.error('에러의 요청:', error.request);\n          //do something else\n        } else if (error.message) {\n          console.error('에러의 메시지:', error.message);\n          //do something other than the other two\n        }\n        return false;\n      });\n    }\n    console.log(\"login.js 로그인여부 2: \" + isLogin);\n    if (isLogin) {\n      console.log(\"Login.js 로그인 true임\");\n      const initLogin = async () => {\n        const userInfo = await getUserInfo();\n        console.log(\"userInfo: \", userInfo);\n        console.log(\"userInfo.userId: \", userInfo.userId);\n        if (userInfo === false) {\n          console.log(\"Login.js 로그인 true인데 저장된 userInfo는 없음 false\");\n          setIsLogin(false);\n        }\n        navigate(`/${userInfo.userId}`);\n        console.log(\"Login.js 로그인 true, 저장된 userInfo있어서 자동 네비게이터\");\n        setHasRequestedCallback(false);\n      };\n      initLogin();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLogin, setHasRequestedCallback, navigate, setIsLogin]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"MUMUL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Rabbit,\n            alt: \"rabbit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loginTitle\",\n              children: [\"\\uBC14\\uC058\\uB2E4 \\uBC14\\uBE60 \\uD604\\uB300 \\uC0AC\\uD68C!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), \"\\uBC18\\uAC00\\uC6CC \\uB09C \\uD1A0\\uB07C\\uC57C\\uD83D\\uDC30\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loginDecs\",\n              children: \"MUMUL \\uC2A4\\uD398\\uC774\\uC2A4\\uB97C \\uB9CC\\uB4DC\\uB824\\uBA74 \\uB85C\\uADF8\\uC778\\uC744 \\uD574\\uC57C \\uB3FC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: kakaoLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Cacao,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), \"Kakao \\uACC4\\uC815\\uC73C\\uB85C \\uACC4\\uC18D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: GoogleSocialLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Goggle,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), \"Google \\uACC4\\uC815\\uC73C\\uB85C \\uACC4\\uC18D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"xHV7TGP+T3mSmfvpdOBz8nlP2uo=\", false, function () {\n  return [useNavigate, useGoogleLogin];\n});\n_c = Login;\nLogin.propTypes = {\n  isLogin: PropTypes.any.isRequired,\n  setIsLogin: PropTypes.any.isRequired,\n  hasRequestedCallback: PropTypes.any.isRequired,\n  setHasRequestedCallback: PropTypes.any.isRequired\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useNavigate","useGoogleLogin","Rabbit","getUserInfo","Goggle","Cacao","axios","PropTypes","jsxDEV","_jsxDEV","Login","isLogin","setIsLogin","hasRequestedCallback","setHasRequestedCallback","_s","navigate","KAKAO_AUTH_URL","GoogleSocialLogin","scope","ux_mode","flow","kakaoLogin","window","location","href","queryParams","URLSearchParams","search","codeFromURL","get","console","log","headers","withCredentials","crossDomain","then","response","status","data","has","authToken","authToken_","localStorage","setItem","catch","error","request","message","initLogin","userInfo","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","propTypes","any","isRequired","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/pages/Login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { postLoginToken } from \"../api/postLoginToken\";\r\n// import {GoogleLogin} from \"@react-oauth/google\";\r\n// import {GoogleOAuthProvider} from \"@react-oauth/google\";\r\nimport { useGoogleLogin } from \"@react-oauth/google\";\r\nimport Rabbit from \"./../img/Group 12.png\";\r\nimport { getUserInfo } from \"../api/getUserInfo\";\r\nimport Goggle from \"./../img/icon/icGoggle.png\";\r\nimport Cacao from \"./../img/icon/icCacao.png\";\r\nimport axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = ({ isLogin, setIsLogin, hasRequestedCallback, setHasRequestedCallback }) => {\r\n  const navigate = useNavigate();\r\n  const KAKAO_AUTH_URL = \"https://kauth.kakao.com/oauth/authorize?client_id=d2c26f36c69325cd253b8d0b68802286&redirect_uri=https://mumul.site/login/kakao&response_type=code\";\r\n\r\n  const GoogleSocialLogin = useGoogleLogin({\r\n    scope: \"email profile\",\r\n    ux_mode: \"redirect\",\r\n    // redirect_uri: \"http://localhost:3000/login\",\r\n    flow: \"auth-code\",\r\n  });\r\n\r\n  const kakaoLogin = () => {\r\n    window.location.href = KAKAO_AUTH_URL;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const codeFromURL = queryParams.get(\"code\");\r\n\r\n\r\n    console.log(\" codeFromURL: \", codeFromURL);\r\n\r\n    console.log(\"login.js 로그인여부 1 : \" + isLogin);\r\n\r\n    if (!isLogin && !hasRequestedCallback && codeFromURL) {\r\n      console.log(\"Login 로그인 false여서 로그인 실행함 1\");\r\n      setHasRequestedCallback(true);\r\n      console.log(\"Login 로그인 false여서 로그인 실행함 2\");\r\n\r\n\r\n      axios\r\n        .get(`https://api-mumul.site/v1/oauth/login/callback?code=${codeFromURL}`, {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          withCredentials: true, //-> cors 문제 해결 위해 일단 주석처리\r\n          crossDomain: true,\r\n        })\r\n\r\n        .then(response => {\r\n          if(response.status===200){\r\n            console.log(\"Login 전체 응답: \", response.data);\r\n\r\n            console.log(\"Authorization 헤더 출력: \",response.headers.get('Authorization'));\r\n  \r\n            console.log(\"Authorization 헤더값 존재여부: \",response.headers.has('Authorization'));\r\n  \r\n\r\n            const authToken = response.headers['Authorization'];  // 응답헤더에서 토큰 받기\r\n  \r\n            const authToken_=response.headers.get('Authorization');\r\n        \r\n            console.log(\"Login 의 authToken: \", authToken);\r\n            console.log(\"Login 의 authToken_: \", authToken_);\r\n            console.log(\"res.headers['authorization']: \", response.headers['authorization']);\r\n            console.log(\"response.headers.get('authorization'): \", response.headers.get('authorization'));\r\n            console.log(\"headers 전체 출력: \", response.headers);\r\n  \r\n  \r\n            localStorage.setItem('token', authToken_);\r\n  \r\n            // axios.defaults.headers.common[\r\n            //   'Authorization'\r\n            // ] = `Bearer ${authToken}`;\r\n  \r\n            console.log(\"Login 로그인 false여서 로그인 실행함 5\");\r\n  \r\n            setIsLogin(true);\r\n  \r\n            console.log(\"Login 로그인 false여서 로그인 실행함 6\");\r\n            console.log(\"Login true됨\");\r\n          }\r\n          \r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            console.error('에러의 응답:', error.response);\r\n            //do something\r\n\r\n        } else if (error.request) {\r\n            console.error('에러의 요청:', error.request);\r\n            //do something else\r\n\r\n        } else if (error.message) {\r\n            console.error('에러의 메시지:', error.message);\r\n            //do something other than the other two\r\n\r\n        }\r\n    \r\n        return false;\r\n        });\r\n    }\r\n\r\n    console.log(\"login.js 로그인여부 2: \" + isLogin);\r\n\r\n    if (isLogin) {\r\n      console.log(\"Login.js 로그인 true임\");\r\n      const initLogin = async () => {\r\n        const userInfo = await getUserInfo();\r\n        console.log(\"userInfo: \", userInfo);\r\n        console.log(\"userInfo.userId: \", userInfo.userId);\r\n        if (userInfo === false) {\r\n          console.log(\"Login.js 로그인 true인데 저장된 userInfo는 없음 false\");\r\n          setIsLogin(false);\r\n        }\r\n\r\n        navigate(`/${userInfo.userId}`);\r\n        console.log(\"Login.js 로그인 true, 저장된 userInfo있어서 자동 네비게이터\");\r\n        setHasRequestedCallback(false);\r\n      };\r\n      initLogin();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLogin, setHasRequestedCallback, navigate, setIsLogin]);\r\n\r\n\r\n  return (\r\n    <div className=\"wrap\">\r\n      <div className=\"content\">\r\n        <h1 className=\"title\">MUMUL</h1>\r\n        <div className=\"loginWrap\">\r\n          <div className=\"img\">\r\n            <img src={Rabbit} alt=\"rabbit\" />\r\n          </div>\r\n          <div>\r\n            <div className=\"text\">\r\n              <p className=\"loginTitle\">\r\n                바쁘다 바빠 현대 사회!\r\n                <br />\r\n                반가워 난 토끼야🐰\r\n              </p>\r\n              <p className=\"loginDecs\">MUMUL 스페이스를 만드려면 로그인을 해야 돼</p>\r\n            </div>\r\n            <div className=\"buttonWrap\">\r\n              <button onClick={kakaoLogin}>\r\n                <img src={Cacao} alt=\"\" />\r\n                Kakao 계정으로 계속\r\n              </button>\r\n              <button onClick={GoogleSocialLogin}>\r\n                <img src={Goggle} alt=\"\" />\r\n                Google 계정으로 계속\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  isLogin: PropTypes.any.isRequired,\r\n  setIsLogin: PropTypes.any.isRequired,\r\n  hasRequestedCallback: PropTypes.any.isRequired,\r\n  setHasRequestedCallback: PropTypes.any.isRequired,\r\n}\r\n\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}