{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\mumul_frontend\\\\mumul\\\\src\\\\component\\\\ReceiveComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport More from \"./../img/icon/icMore.png\";\nimport Bin from \"./../img/icon/icBin.png\";\nimport Comment from \"./../img/icon/icChat.png\";\nimport AnonymousAnswer from \"./AnonymousAnswer\";\nimport Delete from \"./popup/QDelete\";\nimport { getPReceivedComment } from \"../api/Q&A/getPReceivedComment\";\nimport { getSpaceInfo } from \"../api/getSpaceInfo\";\nimport UntilAnswering from \"./UntilAnswering\";\nimport AnswerRegister from \"./popup/AnswerRegister\";\nimport CantModal from \"./popup/CantRegister\";\nimport ADelete from \"./popup/ADelete\";\nimport AnswerBtn from \"./AnswerButton\";\nimport Profile5 from \"./../img/Ellipse 105.png\";\nimport Profile2 from \"./../img/Ellipse 104.png\";\nimport Loading from \"./Loading\";\n\n// TODO : spaceId 근원 트랙킹하기 -> undefined 해\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReceiveComment({\n  spaceId,\n  currentUserInfo\n}) {\n  _s();\n  const [page, setPage] = useState(0); // 페이지 번호 상태값 추가\n  const [pageSize, setPageSize] = useState(5); // 페이지 크기 상태값 추가\n  const [loading, setLoading] = useState(false); // 로딩 상태값 추가\n  const [allDataFetched, setAllDataFetched] = useState(false); // 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\n  const [fetchingMoreData, setFetchingMoreData] = useState(false);\n  const [receivedComments, setReceivedComments] = useState([]);\n  // 질문 삭제 상태값\n  const [deleteStates, setDeleteStates] = useState([]);\n  // 답변 삭제 상태값\n  const [a_deleteStates, a_setDeleteStates] = useState([]);\n\n  // 질문 공유 상태값\n  const [shareStates, setShareStates] = useState({});\n\n  //질문 삭제 모달 오픈 상태값\n  const [delModal, setDelModal] = useState(false);\n  //답변 삭제 모달 오픈 상태값\n  const [a_delModal, a_setDelModal] = useState(false);\n  //등록불가 모달 오픈 상태값\n  const [cantModal, setCantModal] = useState(false);\n  const [answerModal, setAnswerModal] = useState(false);\n\n  // 선택한 답변의 고유 ID를 상태값에 저장\n  const [selectedAnswerId, setSelectedAnswerId] = useState([]);\n\n  // 선택한 질문의 고유 ID를 상태값에 저장\n  const [selectedQuestionId, setSelectedQuestionId] = useState([]);\n  const [selectedQuestionUserId, setSelectedQuestionUserId] = useState([]);\n  const [selectedQuestionUserPic, setSelectedQuestionPic] = useState([]);\n  const [selectedQuestionText, setSelectedQuestionText] = useState([]);\n\n  // 선택한 질문의 스페이스 ID와 유저 ID를 상태값에 저장\n  const [selectedSpaceId, setSelectedSpaceId] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState([]);\n\n  // More 아이콘 드롭다운 오픈 여부 상태값\n  const [q_openedDropdownIndex, q_setOpenedDropdownIndex] = useState([]);\n  const [a_openedDropdownIndex, a_setOpenedDropdownIndex] = useState([]);\n\n  // 이동한 스페이스 상태값\n  const [spaceOwner, setSpaceOwner] = useState({\n    userId: \"\",\n    picture: \"\",\n    name: \"\"\n  });\n  const fetchData = async (isInitialFetch = true) => {\n    try {\n      setLoading(true);\n\n      // isInitialFetch가 true일 경우에만 페이지 번호를 초기화\n      if (isInitialFetch) {\n        setPage(0);\n      }\n      const spaInfo = await getSpaceInfo(spaceId);\n      const response = await getPReceivedComment(spaceId, page, pageSize);\n\n      //뭐가 undefined인지 확인하기 위한 로그\n      console.log(\"response: \", response.data);\n      console.log(\"receivedComments: \", receivedComments);\n\n      // newComments가 정의되지 않았다면 빈 배열로 초기화\n      const newComments = isInitialFetch ? response.data : [...receivedComments, ...response.data];\n      setReceivedComments(newComments);\n      setSpaceOwner(spaInfo);\n\n      // deleteStates 배열을 모든 질문에 대해 초기화\n      // fix: newComments의 undefined 을 매핑하는 문제 해결\n      const initialDeleteStates = newComments.map(() => false);\n      setDeleteStates(initialDeleteStates);\n      a_setDeleteStates(initialDeleteStates);\n      setShareStates(initialDeleteStates);\n\n      // 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\n      if (response.data.length === 0) {\n        setAllDataFetched(true);\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const spinnerRef = useRef(null);\n  useEffect(() => {\n    fetchData();\n  }, [spaceId, pageSize]);\n  useEffect(() => {\n    const fetchDataOnScroll = async () => {\n      if (!fetchingMoreData && !allDataFetched) {\n        setFetchingMoreData(true);\n        const response = await getPReceivedComment(spaceId, page + 1, pageSize);\n        setFetchingMoreData(false);\n        if (response.data.length === 0) {\n          setAllDataFetched(true);\n          return; // 더 이상 데이터를 불러올 필요가 없으므로 종료\n        }\n        setReceivedComments(prevData => [...prevData, ...response.data.map(item => ({\n          ...item,\n          key: item.id\n        }))]);\n        setPage(prevPage => prevPage + 1);\n      }\n    };\n    const handleScroll = () => {\n      const scrollY = window.scrollY;\n      const windowHeight = window.innerHeight;\n      const contentHeight = document.body.scrollHeight;\n      if (scrollY >= contentHeight - windowHeight - 200) {\n        fetchDataOnScroll();\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [spaceId, page, pageSize, allDataFetched, fetchingMoreData]);\n\n  // 클릭한 질문에 대한 삭제 상태값 변경\n  const clickMore = index => {\n    q_setOpenedDropdownIndex(prevIndex => prevIndex === index ? null : index);\n    a_setOpenedDropdownIndex(null); // Close answer modal if any is open\n    setDeleteStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 클릭한 답변에 대한 삭제 상태값 변경\n  const clickMore_1 = index => {\n    a_setOpenedDropdownIndex(prevIndex => prevIndex === index ? null : index);\n    q_setOpenedDropdownIndex(null); // Close question modal if any is open\n    a_setDeleteStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 클릭한 질문에 대한 공유하기 상태값 변경\n  const clickMore_s = index => {\n    setShareStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 질문 삭제하기 클릭 시 모달 오픈\n  const showDelModal = (questionId, spaceId, userId) => {\n    // 삭제하기 드랍다운 지우기\n    setDeleteStates(\"\");\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\n    setDelModal(true);\n  };\n\n  // 답변 삭제하기 클릭 시 모달 오픈\n  const a_showDelModal = (answerId, spaceId, userId) => {\n    setSelectedAnswerId(answerId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\n    a_setDelModal(true);\n  };\n\n  // 두번째 답변 등록 시 모달 오픈\n  const showCantModal = () => {\n    setCantModal(true);\n  };\n\n  // 삭제 팝업  닫기\n  const onClose = e => {\n    setDelModal(false);\n    a_setDelModal(false);\n    setCantModal(false);\n    // setShare(false);\n  };\n\n  //공유하기  오픈\n  // const showShareModal = (questionId) => {\n  //   setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\n  //   setShare(true);\n  // };\n\n  const showAnswerModal = (questionId, sentUserId, sentUserPic, questionText) => {\n    setAnswerModal(true);\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedQuestionUserId(sentUserId); // 선택한 질문의 유저 아이디를 상태값에 저장\n    setSelectedQuestionPic(sentUserPic); // 선택한 질문의 유저 사진값을 상태값에 저장\n    setSelectedQuestionText(questionText); // 선택한 질문의 내용 상태값에 저장\n  };\n  const closeAnswerModal = () => {\n    setAnswerModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [receivedComments.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileArea\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Profile5,\n            alt: \"profile1\",\n            className: \"pre_questioner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cnt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_Nickname\",\n            children: \"\\uC775\\uBA85\\uC758 \\uD1A0\\uB07C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_min\",\n            children: \"\\uC5B8\\uC820\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_commentCnt\",\n            children: \"\\uBC1B\\uC740 \\uC9C8\\uBB38\\uC774 \\uC5C6\\uC5B4\\uC694\\uD83E\\uDD16 \\uCCAB \\uBB34\\uBB3C\\uC758 \\uC8FC\\uC778\\uACF5\\uC774 \\uB418\\uC5B4 \\uBCF4\\uC138\\uC694!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 10\n      }, this)\n    }, void 0, false), receivedComments.slice().map((received, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: received.answers.length > 0 ? \"commentWrap questionWrap\" : \"pre\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileArea\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: received.sentUserPic,\n            alt: \"profile1\",\n            className: `questioner ${received.isAnonymous ? \"anonymous\" : \"\"}`,\n            onClick: () => {\n              if (!received.isAnonymous) {\n                window.location.href = `/${received.sendingUserId}`;\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cnt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Nicname\",\n            children: received.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"min\",\n            children: getTimeDifference(received.createdTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commentCnt\",\n            children: received.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heart\",\n            children: received.answers.length > 0 ? received.receivingUserId === currentUserInfo.userId && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Comment,\n              alt: \"comment\",\n              className: \"chat\",\n              onClick: showCantModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: currentUserInfo.userId !== spaceOwner.userId ? \"\" : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Comment,\n                alt: \"comment\",\n                className: \"chat\",\n                onClick: () => showAnswerModal(received.id, received.userId, received.sentUserPic, received.questionText)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more\",\n            children: [currentUserInfo.userId === spaceOwner.userId || currentUserInfo.userId === received.sendingUserId ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: More,\n              alt: \"more\",\n              onClick: () => clickMore(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this) : \"\", deleteStates[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"del\",\n              onClick: () => showDelModal(received.id, spaceId, currentUserInfo.userId),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Bin,\n                  alt: \"btin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this), \"\\uC0AD\\uC81C\\uD558\\uAE30\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, received.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentWrap answerWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileArea\",\n          children: received.answers.length === 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: spaceOwner.picture,\n            alt: \"profile2\",\n            className: \"pre_questioner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: spaceOwner.picture,\n            alt: \"profile2\",\n            className: \"respondent\",\n            onClick: () => {\n              if (spaceId !== received.answers[0].userId.toString()) {\n                window.location.href = `/${received.answers[0].userId}`;\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cnt\",\n          children: [received.answers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pre_Nickname\",\n            children: spaceOwner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Nicname\",\n            children: spaceOwner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), received.answers.length === 0 ? /*#__PURE__*/_jsxDEV(UntilAnswering, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"min\",\n              children: getTimeDifference(received.answers[0].createdTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AnonymousAnswer, {\n              question: received,\n              answers: received.answers,\n              currentUserInfo: currentUserInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), received.answers.length === 0 ? \"\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"more\",\n              children: [currentUserInfo.userId === received.answers[0].userId ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: More,\n                alt: \"more\",\n                onClick: () => clickMore_1(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 23\n              }, this) : \"\", a_deleteStates[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"del\",\n                onClick: () => a_showDelModal(received.answers[0].id, spaceId, currentUserInfo.userId),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Bin,\n                    alt: \"btin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 27\n                  }, this), \"\\uC0AD\\uC81C\\uD558\\uAE30\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), delModal && /*#__PURE__*/_jsxDEV(Delete, {\n          questionId: selectedQuestionId,\n          spaceId: selectedSpaceId // 스페이스 ID 전달\n          ,\n          userId: selectedUserId // 유저 ID 전달\n          ,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 15\n        }, this), a_delModal && /*#__PURE__*/_jsxDEV(ADelete, {\n          answerId: selectedAnswerId,\n          spaceId: selectedSpaceId // 스페이스 ID 전달\n          ,\n          userId: selectedUserId // 유저 ID 전달\n          ,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }, this), cantModal && /*#__PURE__*/_jsxDEV(CantModal, {\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, received.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)), answerModal && /*#__PURE__*/_jsxDEV(AnswerRegister, {\n      CloseAnswerModal: closeAnswerModal,\n      currentUserInfo: currentUserInfo,\n      questionId: selectedQuestionId,\n      sentUserId: selectedQuestionUserId,\n      sentUserPic: selectedQuestionUserPic,\n      questionText: selectedQuestionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: spinnerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ReceiveComment, \"IbJTOIN14XP4BmVklBrUl8j3Zk4=\");\n_c = ReceiveComment;\nexport default ReceiveComment;\n\n// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\nfunction getTimeDifference(createdTime) {\n  return moment(createdTime).locale(\"ko\").fromNow();\n}\nvar _c;\n$RefreshReg$(_c, \"ReceiveComment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","moment","More","Bin","Comment","AnonymousAnswer","Delete","getPReceivedComment","getSpaceInfo","UntilAnswering","AnswerRegister","CantModal","ADelete","AnswerBtn","Profile5","Profile2","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceiveComment","spaceId","currentUserInfo","_s","page","setPage","pageSize","setPageSize","loading","setLoading","allDataFetched","setAllDataFetched","fetchingMoreData","setFetchingMoreData","receivedComments","setReceivedComments","deleteStates","setDeleteStates","a_deleteStates","a_setDeleteStates","shareStates","setShareStates","delModal","setDelModal","a_delModal","a_setDelModal","cantModal","setCantModal","answerModal","setAnswerModal","selectedAnswerId","setSelectedAnswerId","selectedQuestionId","setSelectedQuestionId","selectedQuestionUserId","setSelectedQuestionUserId","selectedQuestionUserPic","setSelectedQuestionPic","selectedQuestionText","setSelectedQuestionText","selectedSpaceId","setSelectedSpaceId","selectedUserId","setSelectedUserId","q_openedDropdownIndex","q_setOpenedDropdownIndex","a_openedDropdownIndex","a_setOpenedDropdownIndex","spaceOwner","setSpaceOwner","userId","picture","name","fetchData","isInitialFetch","spaInfo","response","console","log","data","newComments","initialDeleteStates","map","length","error","spinnerRef","fetchDataOnScroll","prevData","item","key","id","prevPage","handleScroll","scrollY","window","windowHeight","innerHeight","contentHeight","document","body","scrollHeight","addEventListener","removeEventListener","clickMore","index","prevIndex","prevStates","newStates","clickMore_1","clickMore_s","showDelModal","questionId","a_showDelModal","answerId","showCantModal","onClose","e","showAnswerModal","sentUserId","sentUserPic","questionText","closeAnswerModal","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","slice","received","answers","isAnonymous","onClick","location","href","sendingUserId","getTimeDifference","createdTime","receivingUserId","toString","question","CloseAnswerModal","ref","_c","locale","fromNow","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/component/ReceiveComment.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\";\r\nimport More from \"./../img/icon/icMore.png\";\r\nimport Bin from \"./../img/icon/icBin.png\";\r\nimport Comment from \"./../img/icon/icChat.png\";\r\nimport AnonymousAnswer from \"./AnonymousAnswer\";\r\nimport Delete from \"./popup/QDelete\";\r\nimport { getPReceivedComment } from \"../api/Q&A/getPReceivedComment\";\r\nimport { getSpaceInfo } from \"../api/getSpaceInfo\";\r\nimport UntilAnswering from \"./UntilAnswering\";\r\nimport AnswerRegister from \"./popup/AnswerRegister\";\r\nimport CantModal from \"./popup/CantRegister\";\r\nimport ADelete from \"./popup/ADelete\";\r\nimport AnswerBtn from \"./AnswerButton\";\r\nimport Profile5 from \"./../img/Ellipse 105.png\";\r\nimport Profile2 from \"./../img/Ellipse 104.png\";\r\nimport Loading from \"./Loading\";\r\n\r\n\r\n// TODO : spaceId 근원 트랙킹하기 -> undefined 해\r\n\r\nfunction ReceiveComment({ spaceId, currentUserInfo }) {\r\n  const [page, setPage] = useState(0); // 페이지 번호 상태값 추가\r\n  const [pageSize, setPageSize] = useState(5); // 페이지 크기 상태값 추가\r\n  const [loading, setLoading] = useState(false); // 로딩 상태값 추가\r\n  const [allDataFetched, setAllDataFetched] = useState(false); // 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\r\n  const [fetchingMoreData, setFetchingMoreData] = useState(false);\r\n  const [receivedComments, setReceivedComments] = useState([]);\r\n  // 질문 삭제 상태값\r\n  const [deleteStates, setDeleteStates] = useState([]);\r\n  // 답변 삭제 상태값\r\n  const [a_deleteStates, a_setDeleteStates] = useState([]);\r\n\r\n  // 질문 공유 상태값\r\n  const [shareStates, setShareStates] = useState({});\r\n\r\n  //질문 삭제 모달 오픈 상태값\r\n  const [delModal, setDelModal] = useState(false);\r\n  //답변 삭제 모달 오픈 상태값\r\n  const [a_delModal, a_setDelModal] = useState(false);\r\n  //등록불가 모달 오픈 상태값\r\n  const [cantModal, setCantModal] = useState(false);\r\n  const [answerModal, setAnswerModal] = useState(false);\r\n\r\n  // 선택한 답변의 고유 ID를 상태값에 저장\r\n  const [selectedAnswerId, setSelectedAnswerId] = useState([]);\r\n\r\n  // 선택한 질문의 고유 ID를 상태값에 저장\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState([]);\r\n\r\n  const [selectedQuestionUserId, setSelectedQuestionUserId] = useState([]);\r\n  const [selectedQuestionUserPic, setSelectedQuestionPic] = useState([]);\r\n  const [selectedQuestionText, setSelectedQuestionText] = useState([]);\r\n\r\n  // 선택한 질문의 스페이스 ID와 유저 ID를 상태값에 저장\r\n  const [selectedSpaceId, setSelectedSpaceId] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState([]);\r\n\r\n  // More 아이콘 드롭다운 오픈 여부 상태값\r\n  const [q_openedDropdownIndex, q_setOpenedDropdownIndex] = useState([]);\r\n  const [a_openedDropdownIndex, a_setOpenedDropdownIndex] = useState([]);\r\n\r\n  // 이동한 스페이스 상태값\r\n  const [spaceOwner, setSpaceOwner] = useState({\r\n    userId: \"\",\r\n    picture: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const fetchData = async (isInitialFetch = true) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // isInitialFetch가 true일 경우에만 페이지 번호를 초기화\r\n      if (isInitialFetch) {\r\n        setPage(0);\r\n      }\r\n\r\n      const spaInfo = await getSpaceInfo(spaceId);\r\n      const response = await getPReceivedComment(spaceId, page, pageSize);\r\n\r\n\r\n      //뭐가 undefined인지 확인하기 위한 로그\r\n      console.log(\"response: \",response.data);\r\n      console.log(\"receivedComments: \",receivedComments);\r\n\r\n     // newComments가 정의되지 않았다면 빈 배열로 초기화\r\n      const newComments = isInitialFetch\r\n        ? response.data\r\n        : [...receivedComments, ...response.data];\r\n      setReceivedComments(newComments);\r\n      setSpaceOwner(spaInfo);\r\n\r\n      // deleteStates 배열을 모든 질문에 대해 초기화\r\n      // fix: newComments의 undefined 을 매핑하는 문제 해결\r\n      const initialDeleteStates = newComments.map(() => false);\r\n\r\n      setDeleteStates(initialDeleteStates);\r\n      a_setDeleteStates(initialDeleteStates);\r\n      setShareStates(initialDeleteStates);\r\n\r\n      // 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\r\n      if (response.data.length === 0) {\r\n        setAllDataFetched(true);\r\n      }\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const spinnerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [spaceId, pageSize]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataOnScroll = async () => {\r\n      if (!fetchingMoreData && !allDataFetched) {\r\n        setFetchingMoreData(true);\r\n\r\n        const response = await getPReceivedComment(spaceId, page + 1, pageSize);\r\n\r\n        setFetchingMoreData(false);\r\n\r\n        if (response.data.length === 0) {\r\n          setAllDataFetched(true);\r\n          return; // 더 이상 데이터를 불러올 필요가 없으므로 종료\r\n        }\r\n\r\n        setReceivedComments((prevData) => [\r\n          ...prevData,\r\n          ...response.data.map((item) => ({ ...item, key: item.id })),\r\n        ]);\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const scrollY = window.scrollY;\r\n      const windowHeight = window.innerHeight;\r\n      const contentHeight = document.body.scrollHeight;\r\n\r\n      if (scrollY >= contentHeight - windowHeight - 200) {\r\n        fetchDataOnScroll();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [spaceId, page, pageSize, allDataFetched, fetchingMoreData]);\r\n\r\n  // 클릭한 질문에 대한 삭제 상태값 변경\r\n  const clickMore = (index) => {\r\n    q_setOpenedDropdownIndex((prevIndex) =>\r\n      prevIndex === index ? null : index\r\n    );\r\n    a_setOpenedDropdownIndex(null); // Close answer modal if any is open\r\n    setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 클릭한 답변에 대한 삭제 상태값 변경\r\n  const clickMore_1 = (index) => {\r\n    a_setOpenedDropdownIndex((prevIndex) =>\r\n      prevIndex === index ? null : index\r\n    );\r\n    q_setOpenedDropdownIndex(null); // Close question modal if any is open\r\n    a_setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 클릭한 질문에 대한 공유하기 상태값 변경\r\n  const clickMore_s = (index) => {\r\n    setShareStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 질문 삭제하기 클릭 시 모달 오픈\r\n  const showDelModal = (questionId, spaceId, userId) => {\r\n    // 삭제하기 드랍다운 지우기\r\n    setDeleteStates(\"\");\r\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    setDelModal(true);\r\n  };\r\n\r\n  // 답변 삭제하기 클릭 시 모달 오픈\r\n  const a_showDelModal = (answerId, spaceId, userId) => {\r\n    setSelectedAnswerId(answerId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    a_setDelModal(true);\r\n  };\r\n\r\n  // 두번째 답변 등록 시 모달 오픈\r\n  const showCantModal = () => {\r\n    setCantModal(true);\r\n  };\r\n\r\n  // 삭제 팝업  닫기\r\n  const onClose = (e) => {\r\n    setDelModal(false);\r\n    a_setDelModal(false);\r\n    setCantModal(false);\r\n    // setShare(false);\r\n  };\r\n\r\n  //공유하기  오픈\r\n  // const showShareModal = (questionId) => {\r\n  //   setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n  //   setShare(true);\r\n  // };\r\n\r\n  const showAnswerModal = (\r\n    questionId,\r\n    sentUserId,\r\n    sentUserPic,\r\n    questionText\r\n  ) => {\r\n    setAnswerModal(true);\r\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedQuestionUserId(sentUserId); // 선택한 질문의 유저 아이디를 상태값에 저장\r\n    setSelectedQuestionPic(sentUserPic); // 선택한 질문의 유저 사진값을 상태값에 저장\r\n    setSelectedQuestionText(questionText); // 선택한 질문의 내용 상태값에 저장\r\n  };\r\n\r\n  const closeAnswerModal = () => {\r\n    setAnswerModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {receivedComments.length === 0 && (\r\n        <>\r\n         <div className=\"placeholder\">\r\n            <div className=\"profileArea\">\r\n              <img src={Profile5} alt=\"profile1\" className=\"pre_questioner\" />\r\n            </div>\r\n            <div className=\"cnt\">\r\n              <p className=\"pre_Nickname\">익명의 토끼</p>\r\n              <p className=\"pre_min\">언젠가</p>\r\n              <p className=\"pre_commentCnt\">\r\n                받은 질문이 없어요🤖 첫 무물의 주인공이 되어 보세요!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {receivedComments.slice().map((received, index) => (\r\n        <React.Fragment key={received.id}>\r\n          <div\r\n            key={received.id}\r\n            className={\r\n              received.answers.length > 0\r\n                ? \"commentWrap questionWrap\"\r\n                : \"pre\"\r\n            }\r\n          >\r\n            <div className=\"profileArea\">\r\n              <img\r\n                src={received.sentUserPic}\r\n                alt=\"profile1\"\r\n                className={`questioner ${\r\n                  received.isAnonymous ? \"anonymous\" : \"\"\r\n                }`}\r\n                onClick={() => {\r\n                  if (!received.isAnonymous) {\r\n                    window.location.href = `/${received.sendingUserId}`;\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"cnt\">\r\n              <p className=\"Nicname\">{received.userId}</p>\r\n              <p className=\"min\">{getTimeDifference(received.createdTime)}</p>\r\n              <p className=\"commentCnt\">{received.questionText}</p>\r\n              <div className=\"heart\">\r\n                {received.answers.length > 0 ? (\r\n                  received.receivingUserId === currentUserInfo.userId && (\r\n                    <img\r\n                      src={Comment}\r\n                      alt=\"comment\"\r\n                      className=\"chat\"\r\n                      onClick={showCantModal}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  <>\r\n                    {currentUserInfo.userId !== spaceOwner.userId ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <img\r\n                        src={Comment}\r\n                        alt=\"comment\"\r\n                        className=\"chat\"\r\n                        onClick={() =>\r\n                          showAnswerModal(\r\n                            received.id,\r\n                            received.userId,\r\n                            received.sentUserPic,\r\n                            received.questionText\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {\r\n                // 1. 내 스페이스의 질문일 때 currentUserInfo.userId === spaceOwner.userId\r\n                // 2. 내가 작성한 질문, 답변일 때 currentUserInfo.userId === received.userId\r\n              }\r\n              <div className=\"more\">\r\n                {currentUserInfo.userId === spaceOwner.userId ||\r\n                currentUserInfo.userId === received.sendingUserId ? (\r\n                  <img src={More} alt=\"more\" onClick={() => clickMore(index)} />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {deleteStates[index] && (\r\n                  <div\r\n                    className=\"del\"\r\n                    onClick={() =>\r\n                      showDelModal(received.id, spaceId, currentUserInfo.userId)\r\n                    }\r\n                  >\r\n                    <p>\r\n                      <img src={Bin} alt=\"btin\" />\r\n                      삭제하기\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"commentWrap answerWrap\">\r\n            <div className=\"profileArea\">\r\n              {received.answers.length === 0 ? (\r\n                <img\r\n                  src={spaceOwner.picture}\r\n                  alt=\"profile2\"\r\n                  className=\"pre_questioner\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={spaceOwner.picture}\r\n                  alt=\"profile2\"\r\n                  className=\"respondent\"\r\n                  onClick={() => {\r\n                    if (spaceId !== received.answers[0].userId.toString()) {\r\n                      window.location.href = `/${received.answers[0].userId}`;\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"cnt\">\r\n              {received.answers.length === 0 ? (\r\n                <p className=\"pre_Nickname\">{spaceOwner.name}</p>\r\n              ) : (\r\n                <p className=\"Nicname\">{spaceOwner.name}</p>\r\n              )}\r\n\r\n              {received.answers.length === 0 ? (\r\n                <UntilAnswering></UntilAnswering>\r\n              ) : (\r\n                <>\r\n                  <p className=\"min\">\r\n                    {getTimeDifference(received.answers[0].createdTime)}\r\n                  </p>\r\n                  <AnonymousAnswer\r\n                    question={received}\r\n                    answers={received.answers}\r\n                    currentUserInfo={currentUserInfo}\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              {received.answers.length === 0 ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <div className=\"more\">\r\n                    {currentUserInfo.userId === received.answers[0].userId ? (\r\n                      <img\r\n                        src={More}\r\n                        alt=\"more\"\r\n                        onClick={() => clickMore_1(index)}\r\n                      />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n\r\n                    {a_deleteStates[index] && (\r\n                      <div\r\n                        className=\"del\"\r\n                        onClick={() =>\r\n                          a_showDelModal(\r\n                            received.answers[0].id,\r\n                            spaceId,\r\n                            currentUserInfo.userId\r\n                          )\r\n                        }\r\n                      >\r\n                        <p>\r\n                          <img src={Bin} alt=\"btin\" />\r\n                          삭제하기\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* 질문 삭제하기 팝업  */}\r\n            {delModal && (\r\n              <Delete\r\n                questionId={selectedQuestionId}\r\n                spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                userId={selectedUserId} // 유저 ID 전달\r\n                onClose={onClose}\r\n              ></Delete>\r\n            )}\r\n            {/* 답변 삭제하기 팝업  */}\r\n            {a_delModal && (\r\n              <ADelete\r\n                answerId={selectedAnswerId}\r\n                spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                userId={selectedUserId} // 유저 ID 전달\r\n                onClose={onClose}\r\n              ></ADelete>\r\n            )}\r\n            {/* -- 등록불가 팝업 */}\r\n            {cantModal && <CantModal onClose={onClose}></CantModal>}\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n      {answerModal && (\r\n        <AnswerRegister\r\n          CloseAnswerModal={closeAnswerModal}\r\n          currentUserInfo={currentUserInfo}\r\n          questionId={selectedQuestionId}\r\n          sentUserId={selectedQuestionUserId}\r\n          sentUserPic={selectedQuestionUserPic}\r\n          questionText={selectedQuestionText}\r\n        ></AnswerRegister>\r\n      )}\r\n      {loading && <Loading />}\r\n      <div ref={spinnerRef} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReceiveComment;\r\n\r\n// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\r\nfunction getTimeDifference(createdTime) {\r\n  return moment(createdTime).locale(\"ko\").fromNow();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}