{"ast":null,"code":"import axios from \"axios\";\nexport const getUserInfo = async () => {\n  const path = \"https://api-mumul.site/v1/oauth/user/info\";\n  try {\n    const response = await axios.get(path, {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n        'Access-Control-Allow-Origin': \"*\",\n        'Access-Control-Allow-Credentials': \"true\",\n        'Cache-Control': 'no-store',\n        Pragma: 'no-store',\n        Expires: '0'\n      },\n      cache: 'no-cache' // 캐시를 비우는 옵션 추가\n    });\n    if (response.status !== 200) {\n      throw new Error('bad server condition');\n    }\n    console.log(\"getUserInfo 로그인 여부: \", response);\n    return response.data; // response.data로 수정\n  } catch (e) {\n    console.error('getUserInfo Error: ', e.message);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","getUserInfo","path","response","get","headers","Accept","Authorization","localStorage","getItem","Pragma","Expires","cache","status","Error","console","log","data","e","error","message"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/api/getUserInfo.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n\r\nexport const getUserInfo = async () => {\r\n  const path = \"https://api-mumul.site/v1/oauth/user/info\";\r\n\r\n  try {\r\n    const response = await axios.get(path, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        'Access-Control-Allow-Credentials':\"true\",\r\n        'Cache-Control': 'no-store',\r\n        Pragma: 'no-store',\r\n        Expires: '0'\r\n\r\n      },\r\n      cache: 'no-cache' // 캐시를 비우는 옵션 추가\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      throw new Error('bad server condition');\r\n    }\r\n    console.log(\"getUserInfo 로그인 여부: \", response);\r\n    return response.data; // response.data로 수정\r\n\r\n  } catch (e) {\r\n    console.error('getUserInfo Error: ', e.message);\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,IAAI,GAAG,2CAA2C;EAExD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACF,IAAI,EAAE;MACrCG,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD,6BAA6B,EAAE,GAAG;QAClC,kCAAkC,EAAC,MAAM;QACzC,eAAe,EAAE,UAAU;QAC3BC,MAAM,EAAE,UAAU;QAClBC,OAAO,EAAE;MAEX,CAAC;MACDC,KAAK,EAAE,UAAU,CAAC;IACpB,CAAC,CAAC;IAEF,IAAIT,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEb,QAAQ,CAAC;IAC7C,OAAOA,QAAQ,CAACc,IAAI,CAAC,CAAC;EAExB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAED,CAAC,CAACE,OAAO,CAAC;IAC/C,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}