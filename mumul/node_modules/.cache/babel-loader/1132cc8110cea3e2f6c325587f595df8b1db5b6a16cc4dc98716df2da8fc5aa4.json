{"ast":null,"code":"import axios from\"axios\";export const deleteQuestion=async(spaceId,questionId,userId)=>{try{const response=await axios.delete(\"https://api-mumul.site/spaces/\".concat(spaceId,\"/\").concat(questionId,\"/\").concat(userId,\"/question/delete\"),{data:{userId:userId,spaceId:spaceId,questionId:questionId},headers:{'Content-Type':'application/json',Accept:'application/json',Authorization:'Bearer '+localStorage.getItem('token')}});return response.data;}catch(error){if(error.response){console.error('에러의 응답:',error.response);//do something\n}else if(error.request){console.error('에러의 요청:',error.request);//do something else\n}else if(error.message){console.error('에러의 메시지:',error.message);//do something other than the other two\n}return false;}};","map":{"version":3,"names":["axios","deleteQuestion","spaceId","questionId","userId","response","delete","concat","data","headers","Accept","Authorization","localStorage","getItem","error","console","request","message"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/api/Q&A/deleteQuestion.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const deleteQuestion = async (spaceId, questionId, userId) => {\r\n  try {\r\n\r\n    const response = await axios.delete(\r\n      `https://api-mumul.site/spaces/${spaceId}/${questionId}/${userId}/question/delete`\r\n      , {\r\n        data: {\r\n          userId: userId,\r\n          spaceId: spaceId,\r\n          questionId: questionId\r\n        },\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n      }\r\n\r\n\r\n    );\r\n    return response.data;\r\n  } \r\n  \r\n  catch (error) {\r\n    if (error.response) {\r\n      console.error('에러의 응답:', error.response);\r\n      //do something\r\n\r\n  } else if (error.request) {\r\n      console.error('에러의 요청:', error.request);\r\n      //do something else\r\n\r\n  } else if (error.message) {\r\n      console.error('에러의 메시지:', error.message);\r\n      //do something other than the other two\r\n  }\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAAA,CAAOC,OAAO,CAAEC,UAAU,CAAEC,MAAM,GAAK,CACnE,GAAI,CAEF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,MAAM,kCAAAC,MAAA,CACAL,OAAO,MAAAK,MAAA,CAAIJ,UAAU,MAAAI,MAAA,CAAIH,MAAM,qBAC9D,CACAI,IAAI,CAAE,CACJJ,MAAM,CAAEA,MAAM,CACdF,OAAO,CAAEA,OAAO,CAChBC,UAAU,CAAEA,UACd,CAAC,CACDM,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,MAAM,CAAE,kBAAkB,CAC1BC,aAAa,CAAE,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CACzD,CACF,CAGF,CAAC,CACD,MAAO,CAAAR,QAAQ,CAACG,IAAI,CACtB,CAEA,MAAOM,KAAK,CAAE,CACZ,GAAIA,KAAK,CAACT,QAAQ,CAAE,CAClBU,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAACT,QAAQ,CAAC,CACxC;AAEJ,CAAC,IAAM,IAAIS,KAAK,CAACE,OAAO,CAAE,CACtBD,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAACE,OAAO,CAAC,CACvC;AAEJ,CAAC,IAAM,IAAIF,KAAK,CAACG,OAAO,CAAE,CACtBF,OAAO,CAACD,KAAK,CAAC,UAAU,CAAEA,KAAK,CAACG,OAAO,CAAC,CACxC;AACJ,CACE,MAAO,MAAK,CACd,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}