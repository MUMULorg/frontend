{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\mumul_frontend\\\\mumul\\\\src\\\\component\\\\ReceiveComment.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport More from \"./../img/icon/icMore.png\";\nimport Bin from \"./../img/icon/icBin.png\";\nimport Comment from \"./../img/icon/icChat.png\";\nimport AnonymousAnswer from \"./AnonymousAnswer\";\nimport Delete from \"./popup/QDelete\";\nimport { getPReceivedComment } from \"../api/Q&A/getPReceivedComment\";\nimport { getSpaceInfo } from \"../api/getSpaceInfo\";\nimport UntilAnswering from \"./UntilAnswering\";\nimport AnswerRegister from \"./popup/AnswerRegister\";\nimport CantModal from \"./popup/CantRegister\";\nimport ADelete from \"./popup/ADelete\";\nimport AnswerBtn from \"./AnswerButton\";\nimport Profile5 from \"./../img/Ellipse 105.png\";\nimport Profile2 from \"./../img/Ellipse 104.png\";\nimport Loading from \"./Loading\";\nfunction ReceiveComment({\n  spaceId,\n  currentUserInfo\n}) {\n  const [page, setPage] = useState(0); // 페이지 번호 상태값 추가\n  const [pageSize, setPageSize] = useState(5); // 페이지 크기 상태값 추가\n  const [loading, setLoading] = useState(false); // 로딩 상태값 추가\n  const [allDataFetched, setAllDataFetched] = useState(false); // 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\n  const [fetchingMoreData, setFetchingMoreData] = useState(false);\n  const [receivedComments, setReceivedComments] = useState([]);\n  // 질문 삭제 상태값\n  const [deleteStates, setDeleteStates] = useState([]);\n  // 답변 삭제 상태값\n  const [a_deleteStates, a_setDeleteStates] = useState([]);\n\n  // 질문 공유 상태값\n  const [shareStates, setShareStates] = useState({});\n\n  //질문 삭제 모달 오픈 상태값\n  const [delModal, setDelModal] = useState(false);\n  //답변 삭제 모달 오픈 상태값\n  const [a_delModal, a_setDelModal] = useState(false);\n  //등록불가 모달 오픈 상태값\n  const [cantModal, setCantModal] = useState(false);\n  const [answerModal, setAnswerModal] = useState(false);\n\n  // 선택한 답변의 고유 ID를 상태값에 저장\n  const [selectedAnswerId, setSelectedAnswerId] = useState([]);\n\n  // 선택한 질문의 고유 ID를 상태값에 저장\n  const [selectedQuestionId, setSelectedQuestionId] = useState([]);\n  const [selectedQuestionUserId, setSelectedQuestionUserId] = useState([]);\n  const [selectedQuestionUserPic, setSelectedQuestionPic] = useState([]);\n  const [selectedQuestionText, setSelectedQuestionText] = useState([]);\n\n  // 선택한 질문의 스페이스 ID와 유저 ID를 상태값에 저장\n  const [selectedSpaceId, setSelectedSpaceId] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState([]);\n\n  // More 아이콘 드롭다운 오픈 여부 상태값\n  const [q_openedDropdownIndex, q_setOpenedDropdownIndex] = useState([]);\n  const [a_openedDropdownIndex, a_setOpenedDropdownIndex] = useState([]);\n\n  // 이동한 스페이스 상태값\n  const [spaceOwner, setSpaceOwner] = useState({\n    userId: \"\",\n    picture: \"\",\n    name: \"\"\n  });\n  const fetchData = async (isInitialFetch = true) => {\n    try {\n      setLoading(true);\n\n      // isInitialFetch가 true일 경우에만 페이지 번호를 초기화\n      if (isInitialFetch) {\n        setPage(0);\n      }\n      const spaInfo = await getSpaceInfo(spaceId);\n      const response = await getPReceivedComment(spaceId, page, pageSize);\n      const newComments = isInitialFetch ? response.data : [...receivedComments, ...response.data];\n      setReceivedComments(newComments);\n      setSpaceOwner(spaInfo);\n\n      // deleteStates 배열을 모든 질문에 대해 초기화\n      const initialDeleteStates = newComments.map(() => false);\n      setDeleteStates(initialDeleteStates);\n      a_setDeleteStates(initialDeleteStates);\n      setShareStates(initialDeleteStates);\n\n      // 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\n      if (response.data.length === 0) {\n        setAllDataFetched(true);\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const spinnerRef = useRef(null);\n  useEffect(() => {\n    fetchData();\n  }, [spaceId, pageSize]);\n  useEffect(() => {\n    const fetchDataOnScroll = async () => {\n      if (!fetchingMoreData && !allDataFetched) {\n        setFetchingMoreData(true);\n        const response = await getPReceivedComment(spaceId, page + 1, pageSize);\n        setFetchingMoreData(false);\n        if (response.data.length === 0) {\n          setAllDataFetched(true);\n          return; // 더 이상 데이터를 불러올 필요가 없으므로 종료\n        }\n        setReceivedComments(prevData => [...prevData, ...response.data.map(item => ({\n          ...item,\n          key: item.id\n        }))]);\n        setPage(prevPage => prevPage + 1);\n      }\n    };\n    const handleScroll = () => {\n      const scrollY = window.scrollY;\n      const windowHeight = window.innerHeight;\n      const contentHeight = document.body.scrollHeight;\n      if (scrollY >= contentHeight - windowHeight - 200) {\n        fetchDataOnScroll();\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [spaceId, page, pageSize, allDataFetched, fetchingMoreData]);\n\n  // 클릭한 질문에 대한 삭제 상태값 변경\n  const clickMore = index => {\n    q_setOpenedDropdownIndex(prevIndex => prevIndex === index ? null : index);\n    a_setOpenedDropdownIndex(null); // Close answer modal if any is open\n    setDeleteStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 클릭한 답변에 대한 삭제 상태값 변경\n  const clickMore_1 = index => {\n    a_setOpenedDropdownIndex(prevIndex => prevIndex === index ? null : index);\n    q_setOpenedDropdownIndex(null); // Close question modal if any is open\n    a_setDeleteStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 클릭한 질문에 대한 공유하기 상태값 변경\n  const clickMore_s = index => {\n    setShareStates(prevStates => {\n      const newStates = [...prevStates];\n      newStates[index] = !newStates[index];\n      return newStates;\n    });\n  };\n\n  // 질문 삭제하기 클릭 시 모달 오픈\n  const showDelModal = (questionId, spaceId, userId) => {\n    // 삭제하기 드랍다운 지우기\n    setDeleteStates(\"\");\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\n    setDelModal(true);\n  };\n\n  // 답변 삭제하기 클릭 시 모달 오픈\n  const a_showDelModal = (answerId, spaceId, userId) => {\n    setSelectedAnswerId(answerId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\n    a_setDelModal(true);\n  };\n\n  // 두번째 답변 등록 시 모달 오픈\n  const showCantModal = () => {\n    setCantModal(true);\n  };\n\n  // 삭제 팝업  닫기\n  const onClose = e => {\n    setDelModal(false);\n    a_setDelModal(false);\n    setCantModal(false);\n    // setShare(false);\n  };\n\n  //공유하기  오픈\n  // const showShareModal = (questionId) => {\n  //   setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\n  //   setShare(true);\n  // };\n\n  const showAnswerModal = (questionId, sentUserId, sentUserPic, questionText) => {\n    setAnswerModal(true);\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\n    setSelectedQuestionUserId(sentUserId); // 선택한 질문의 유저 아이디를 상태값에 저장\n    setSelectedQuestionPic(sentUserPic); // 선택한 질문의 유저 사진값을 상태값에 저장\n    setSelectedQuestionText(questionText); // 선택한 질문의 내용 상태값에 저장\n  };\n  const closeAnswerModal = () => {\n    setAnswerModal(false);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, receivedComments && receivedComments.length === 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Profile5,\n    alt: \"profile1\",\n    className: \"pre_questioner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cnt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pre_Nickname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"\\uC775\\uBA85\\uC758 \\uD1A0\\uB07C\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pre_min\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, \"\\uC5B8\\uC820\\uAC00\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pre_commentCnt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, \"\\uBC1B\\uC740 \\uC9C8\\uBB38\\uC774 \\uC5C6\\uC5B4\\uC694\\uD83E\\uDD16 \\uCCAB \\uBB34\\uBB3C\\uC758 \\uC8FC\\uC778\\uACF5\\uC774 \\uB418\\uC5B4 \\uBCF4\\uC138\\uC694!\")))), receivedComments.slice().map((received, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: received.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: received.id,\n    className: received.answers.length > 0 ? \"commentWrap questionWrap\" : \"pre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: received.sentUserPic,\n    alt: \"profile1\",\n    className: `questioner ${received.isAnonymous ? \"anonymous\" : \"\"}`,\n    onClick: () => {\n      if (!received.isAnonymous) {\n        window.location.href = `/${received.sendingUserId}`;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cnt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Nicname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, received.userId), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"min\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, getTimeDifference(received.createdTime)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"commentCnt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, received.questionText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, received.answers.length > 0 ? received.receivingUserId === currentUserInfo.userId && /*#__PURE__*/React.createElement(\"img\", {\n    src: Comment,\n    alt: \"comment\",\n    className: \"chat\",\n    onClick: showCantModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, currentUserInfo.userId !== spaceOwner.userId ? \"\" : /*#__PURE__*/React.createElement(\"img\", {\n    src: Comment,\n    alt: \"comment\",\n    className: \"chat\",\n    onClick: () => showAnswerModal(received.id, received.userId, received.sentUserPic, received.questionText),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, currentUserInfo.userId === spaceOwner.userId || currentUserInfo.userId === received.sendingUserId ? /*#__PURE__*/React.createElement(\"img\", {\n    src: More,\n    alt: \"more\",\n    onClick: () => clickMore(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }) : \"\", deleteStates[index] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"del\",\n    onClick: () => showDelModal(received.id, spaceId, currentUserInfo.userId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Bin,\n    alt: \"btin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 23\n    }\n  }), \"\\uC0AD\\uC81C\\uD558\\uAE30\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentWrap answerWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, received.answers.length === 0 ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spaceOwner.picture,\n    alt: \"profile2\",\n    className: \"pre_questioner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: spaceOwner.picture,\n    alt: \"profile2\",\n    className: \"respondent\",\n    onClick: () => {\n      if (spaceId !== received.answers[0].userId.toString()) {\n        window.location.href = `/${received.answers[0].userId}`;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cnt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, received.answers.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pre_Nickname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, spaceOwner.name) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Nicname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }\n  }, spaceOwner.name), received.answers.length === 0 ? /*#__PURE__*/React.createElement(UntilAnswering, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"min\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 19\n    }\n  }, getTimeDifference(received.answers[0].createdTime)), /*#__PURE__*/React.createElement(AnonymousAnswer, {\n    question: received,\n    answers: received.answers,\n    currentUserInfo: currentUserInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  })), received.answers.length === 0 ? \"\" : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }, currentUserInfo.userId === received.answers[0].userId ? /*#__PURE__*/React.createElement(\"img\", {\n    src: More,\n    alt: \"more\",\n    onClick: () => clickMore_1(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 23\n    }\n  }) : \"\", a_deleteStates[index] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"del\",\n    onClick: () => a_showDelModal(received.answers[0].id, spaceId, currentUserInfo.userId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Bin,\n    alt: \"btin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 27\n    }\n  }), \"\\uC0AD\\uC81C\\uD558\\uAE30\"))))), delModal && /*#__PURE__*/React.createElement(Delete, {\n    questionId: selectedQuestionId,\n    spaceId: selectedSpaceId // 스페이스 ID 전달\n    ,\n    userId: selectedUserId // 유저 ID 전달\n    ,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 15\n    }\n  }), a_delModal && /*#__PURE__*/React.createElement(ADelete, {\n    answerId: selectedAnswerId,\n    spaceId: selectedSpaceId // 스페이스 ID 전달\n    ,\n    userId: selectedUserId // 유저 ID 전달\n    ,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }), cantModal && /*#__PURE__*/React.createElement(CantModal, {\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 27\n    }\n  })))), answerModal && /*#__PURE__*/React.createElement(AnswerRegister, {\n    CloseAnswerModal: closeAnswerModal,\n    currentUserInfo: currentUserInfo,\n    questionId: selectedQuestionId,\n    sentUserId: selectedQuestionUserId,\n    sentUserPic: selectedQuestionUserPic,\n    questionText: selectedQuestionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }\n  }), loading && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: spinnerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }\n  }));\n}\nexport default ReceiveComment;\n\n// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\nfunction getTimeDifference(createdTime) {\n  return moment(createdTime).locale(\"ko\").fromNow();\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","moment","More","Bin","Comment","AnonymousAnswer","Delete","getPReceivedComment","getSpaceInfo","UntilAnswering","AnswerRegister","CantModal","ADelete","AnswerBtn","Profile5","Profile2","Loading","ReceiveComment","spaceId","currentUserInfo","page","setPage","pageSize","setPageSize","loading","setLoading","allDataFetched","setAllDataFetched","fetchingMoreData","setFetchingMoreData","receivedComments","setReceivedComments","deleteStates","setDeleteStates","a_deleteStates","a_setDeleteStates","shareStates","setShareStates","delModal","setDelModal","a_delModal","a_setDelModal","cantModal","setCantModal","answerModal","setAnswerModal","selectedAnswerId","setSelectedAnswerId","selectedQuestionId","setSelectedQuestionId","selectedQuestionUserId","setSelectedQuestionUserId","selectedQuestionUserPic","setSelectedQuestionPic","selectedQuestionText","setSelectedQuestionText","selectedSpaceId","setSelectedSpaceId","selectedUserId","setSelectedUserId","q_openedDropdownIndex","q_setOpenedDropdownIndex","a_openedDropdownIndex","a_setOpenedDropdownIndex","spaceOwner","setSpaceOwner","userId","picture","name","fetchData","isInitialFetch","spaInfo","response","newComments","data","initialDeleteStates","map","length","error","console","spinnerRef","fetchDataOnScroll","prevData","item","key","id","prevPage","handleScroll","scrollY","window","windowHeight","innerHeight","contentHeight","document","body","scrollHeight","addEventListener","removeEventListener","clickMore","index","prevIndex","prevStates","newStates","clickMore_1","clickMore_s","showDelModal","questionId","a_showDelModal","answerId","showCantModal","onClose","e","showAnswerModal","sentUserId","sentUserPic","questionText","closeAnswerModal","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","slice","received","answers","isAnonymous","onClick","location","href","sendingUserId","getTimeDifference","createdTime","receivingUserId","toString","question","CloseAnswerModal","ref","locale","fromNow"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/component/ReceiveComment.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\";\r\nimport More from \"./../img/icon/icMore.png\";\r\nimport Bin from \"./../img/icon/icBin.png\";\r\nimport Comment from \"./../img/icon/icChat.png\";\r\nimport AnonymousAnswer from \"./AnonymousAnswer\";\r\nimport Delete from \"./popup/QDelete\";\r\nimport { getPReceivedComment } from \"../api/Q&A/getPReceivedComment\";\r\nimport { getSpaceInfo } from \"../api/getSpaceInfo\";\r\nimport UntilAnswering from \"./UntilAnswering\";\r\nimport AnswerRegister from \"./popup/AnswerRegister\";\r\nimport CantModal from \"./popup/CantRegister\";\r\nimport ADelete from \"./popup/ADelete\";\r\nimport AnswerBtn from \"./AnswerButton\";\r\nimport Profile5 from \"./../img/Ellipse 105.png\";\r\nimport Profile2 from \"./../img/Ellipse 104.png\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction ReceiveComment({ spaceId, currentUserInfo }) {\r\n  const [page, setPage] = useState(0); // 페이지 번호 상태값 추가\r\n  const [pageSize, setPageSize] = useState(5); // 페이지 크기 상태값 추가\r\n  const [loading, setLoading] = useState(false); // 로딩 상태값 추가\r\n  const [allDataFetched, setAllDataFetched] = useState(false); // 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\r\n  const [fetchingMoreData, setFetchingMoreData] = useState(false);\r\n  const [receivedComments, setReceivedComments] = useState([]);\r\n  // 질문 삭제 상태값\r\n  const [deleteStates, setDeleteStates] = useState([]);\r\n  // 답변 삭제 상태값\r\n  const [a_deleteStates, a_setDeleteStates] = useState([]);\r\n\r\n  // 질문 공유 상태값\r\n  const [shareStates, setShareStates] = useState({});\r\n\r\n  //질문 삭제 모달 오픈 상태값\r\n  const [delModal, setDelModal] = useState(false);\r\n  //답변 삭제 모달 오픈 상태값\r\n  const [a_delModal, a_setDelModal] = useState(false);\r\n  //등록불가 모달 오픈 상태값\r\n  const [cantModal, setCantModal] = useState(false);\r\n  const [answerModal, setAnswerModal] = useState(false);\r\n\r\n  // 선택한 답변의 고유 ID를 상태값에 저장\r\n  const [selectedAnswerId, setSelectedAnswerId] = useState([]);\r\n\r\n  // 선택한 질문의 고유 ID를 상태값에 저장\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState([]);\r\n\r\n  const [selectedQuestionUserId, setSelectedQuestionUserId] = useState([]);\r\n  const [selectedQuestionUserPic, setSelectedQuestionPic] = useState([]);\r\n  const [selectedQuestionText, setSelectedQuestionText] = useState([]);\r\n\r\n  // 선택한 질문의 스페이스 ID와 유저 ID를 상태값에 저장\r\n  const [selectedSpaceId, setSelectedSpaceId] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState([]);\r\n\r\n  // More 아이콘 드롭다운 오픈 여부 상태값\r\n  const [q_openedDropdownIndex, q_setOpenedDropdownIndex] = useState([]);\r\n  const [a_openedDropdownIndex, a_setOpenedDropdownIndex] = useState([]);\r\n\r\n  // 이동한 스페이스 상태값\r\n  const [spaceOwner, setSpaceOwner] = useState({\r\n    userId: \"\",\r\n    picture: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const fetchData = async (isInitialFetch = true) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // isInitialFetch가 true일 경우에만 페이지 번호를 초기화\r\n      if (isInitialFetch) {\r\n        setPage(0);\r\n      }\r\n\r\n      const spaInfo = await getSpaceInfo(spaceId);\r\n      const response = await getPReceivedComment(spaceId, page, pageSize);\r\n\r\n      const newComments = isInitialFetch\r\n        ? response.data\r\n        : [...receivedComments, ...response.data];\r\n      setReceivedComments(newComments);\r\n      setSpaceOwner(spaInfo);\r\n\r\n      // deleteStates 배열을 모든 질문에 대해 초기화\r\n      const initialDeleteStates = newComments.map(() => false);\r\n      setDeleteStates(initialDeleteStates);\r\n      a_setDeleteStates(initialDeleteStates);\r\n      setShareStates(initialDeleteStates);\r\n\r\n      // 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\r\n      if (response.data.length === 0) {\r\n        setAllDataFetched(true);\r\n      }\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const spinnerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [spaceId, pageSize]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataOnScroll = async () => {\r\n      if (!fetchingMoreData && !allDataFetched) {\r\n        setFetchingMoreData(true);\r\n\r\n        const response = await getPReceivedComment(spaceId, page + 1, pageSize);\r\n\r\n        setFetchingMoreData(false);\r\n\r\n        if (response.data.length === 0) {\r\n          setAllDataFetched(true);\r\n          return; // 더 이상 데이터를 불러올 필요가 없으므로 종료\r\n        }\r\n\r\n        setReceivedComments((prevData) => [\r\n          ...prevData,\r\n          ...response.data.map((item) => ({ ...item, key: item.id })),\r\n        ]);\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const scrollY = window.scrollY;\r\n      const windowHeight = window.innerHeight;\r\n      const contentHeight = document.body.scrollHeight;\r\n\r\n      if (scrollY >= contentHeight - windowHeight - 200) {\r\n        fetchDataOnScroll();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [spaceId, page, pageSize, allDataFetched, fetchingMoreData]);\r\n\r\n  // 클릭한 질문에 대한 삭제 상태값 변경\r\n  const clickMore = (index) => {\r\n    q_setOpenedDropdownIndex((prevIndex) =>\r\n      prevIndex === index ? null : index\r\n    );\r\n    a_setOpenedDropdownIndex(null); // Close answer modal if any is open\r\n    setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 클릭한 답변에 대한 삭제 상태값 변경\r\n  const clickMore_1 = (index) => {\r\n    a_setOpenedDropdownIndex((prevIndex) =>\r\n      prevIndex === index ? null : index\r\n    );\r\n    q_setOpenedDropdownIndex(null); // Close question modal if any is open\r\n    a_setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 클릭한 질문에 대한 공유하기 상태값 변경\r\n  const clickMore_s = (index) => {\r\n    setShareStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 질문 삭제하기 클릭 시 모달 오픈\r\n  const showDelModal = (questionId, spaceId, userId) => {\r\n    // 삭제하기 드랍다운 지우기\r\n    setDeleteStates(\"\");\r\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    setDelModal(true);\r\n  };\r\n\r\n  // 답변 삭제하기 클릭 시 모달 오픈\r\n  const a_showDelModal = (answerId, spaceId, userId) => {\r\n    setSelectedAnswerId(answerId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    a_setDelModal(true);\r\n  };\r\n\r\n  // 두번째 답변 등록 시 모달 오픈\r\n  const showCantModal = () => {\r\n    setCantModal(true);\r\n  };\r\n\r\n  // 삭제 팝업  닫기\r\n  const onClose = (e) => {\r\n    setDelModal(false);\r\n    a_setDelModal(false);\r\n    setCantModal(false);\r\n    // setShare(false);\r\n  };\r\n\r\n  //공유하기  오픈\r\n  // const showShareModal = (questionId) => {\r\n  //   setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n  //   setShare(true);\r\n  // };\r\n\r\n  const showAnswerModal = (\r\n    questionId,\r\n    sentUserId,\r\n    sentUserPic,\r\n    questionText\r\n  ) => {\r\n    setAnswerModal(true);\r\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedQuestionUserId(sentUserId); // 선택한 질문의 유저 아이디를 상태값에 저장\r\n    setSelectedQuestionPic(sentUserPic); // 선택한 질문의 유저 사진값을 상태값에 저장\r\n    setSelectedQuestionText(questionText); // 선택한 질문의 내용 상태값에 저장\r\n  };\r\n\r\n  const closeAnswerModal = () => {\r\n    setAnswerModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {receivedComments && receivedComments.length === 0 && (\r\n        <>\r\n         <div className=\"placeholder\">\r\n            <div className=\"profileArea\">\r\n              <img src={Profile5} alt=\"profile1\" className=\"pre_questioner\" />\r\n            </div>\r\n            <div className=\"cnt\">\r\n              <p className=\"pre_Nickname\">익명의 토끼</p>\r\n              <p className=\"pre_min\">언젠가</p>\r\n              <p className=\"pre_commentCnt\">\r\n                받은 질문이 없어요🤖 첫 무물의 주인공이 되어 보세요!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {receivedComments.slice().map((received, index) => (\r\n        <React.Fragment key={received.id}>\r\n          <div\r\n            key={received.id}\r\n            className={\r\n              received.answers.length > 0\r\n                ? \"commentWrap questionWrap\"\r\n                : \"pre\"\r\n            }\r\n          >\r\n            <div className=\"profileArea\">\r\n              <img\r\n                src={received.sentUserPic}\r\n                alt=\"profile1\"\r\n                className={`questioner ${\r\n                  received.isAnonymous ? \"anonymous\" : \"\"\r\n                }`}\r\n                onClick={() => {\r\n                  if (!received.isAnonymous) {\r\n                    window.location.href = `/${received.sendingUserId}`;\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"cnt\">\r\n              <p className=\"Nicname\">{received.userId}</p>\r\n              <p className=\"min\">{getTimeDifference(received.createdTime)}</p>\r\n              <p className=\"commentCnt\">{received.questionText}</p>\r\n              <div className=\"heart\">\r\n                {received.answers.length > 0 ? (\r\n                  received.receivingUserId === currentUserInfo.userId && (\r\n                    <img\r\n                      src={Comment}\r\n                      alt=\"comment\"\r\n                      className=\"chat\"\r\n                      onClick={showCantModal}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  <>\r\n                    {currentUserInfo.userId !== spaceOwner.userId ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <img\r\n                        src={Comment}\r\n                        alt=\"comment\"\r\n                        className=\"chat\"\r\n                        onClick={() =>\r\n                          showAnswerModal(\r\n                            received.id,\r\n                            received.userId,\r\n                            received.sentUserPic,\r\n                            received.questionText\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {\r\n                // 1. 내 스페이스의 질문일 때 currentUserInfo.userId === spaceOwner.userId\r\n                // 2. 내가 작성한 질문, 답변일 때 currentUserInfo.userId === received.userId\r\n              }\r\n              <div className=\"more\">\r\n                {currentUserInfo.userId === spaceOwner.userId ||\r\n                currentUserInfo.userId === received.sendingUserId ? (\r\n                  <img src={More} alt=\"more\" onClick={() => clickMore(index)} />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {deleteStates[index] && (\r\n                  <div\r\n                    className=\"del\"\r\n                    onClick={() =>\r\n                      showDelModal(received.id, spaceId, currentUserInfo.userId)\r\n                    }\r\n                  >\r\n                    <p>\r\n                      <img src={Bin} alt=\"btin\" />\r\n                      삭제하기\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"commentWrap answerWrap\">\r\n            <div className=\"profileArea\">\r\n              {received.answers.length === 0 ? (\r\n                <img\r\n                  src={spaceOwner.picture}\r\n                  alt=\"profile2\"\r\n                  className=\"pre_questioner\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={spaceOwner.picture}\r\n                  alt=\"profile2\"\r\n                  className=\"respondent\"\r\n                  onClick={() => {\r\n                    if (spaceId !== received.answers[0].userId.toString()) {\r\n                      window.location.href = `/${received.answers[0].userId}`;\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"cnt\">\r\n              {received.answers.length === 0 ? (\r\n                <p className=\"pre_Nickname\">{spaceOwner.name}</p>\r\n              ) : (\r\n                <p className=\"Nicname\">{spaceOwner.name}</p>\r\n              )}\r\n\r\n              {received.answers.length === 0 ? (\r\n                <UntilAnswering></UntilAnswering>\r\n              ) : (\r\n                <>\r\n                  <p className=\"min\">\r\n                    {getTimeDifference(received.answers[0].createdTime)}\r\n                  </p>\r\n                  <AnonymousAnswer\r\n                    question={received}\r\n                    answers={received.answers}\r\n                    currentUserInfo={currentUserInfo}\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              {received.answers.length === 0 ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <div className=\"more\">\r\n                    {currentUserInfo.userId === received.answers[0].userId ? (\r\n                      <img\r\n                        src={More}\r\n                        alt=\"more\"\r\n                        onClick={() => clickMore_1(index)}\r\n                      />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n\r\n                    {a_deleteStates[index] && (\r\n                      <div\r\n                        className=\"del\"\r\n                        onClick={() =>\r\n                          a_showDelModal(\r\n                            received.answers[0].id,\r\n                            spaceId,\r\n                            currentUserInfo.userId\r\n                          )\r\n                        }\r\n                      >\r\n                        <p>\r\n                          <img src={Bin} alt=\"btin\" />\r\n                          삭제하기\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* 질문 삭제하기 팝업  */}\r\n            {delModal && (\r\n              <Delete\r\n                questionId={selectedQuestionId}\r\n                spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                userId={selectedUserId} // 유저 ID 전달\r\n                onClose={onClose}\r\n              ></Delete>\r\n            )}\r\n            {/* 답변 삭제하기 팝업  */}\r\n            {a_delModal && (\r\n              <ADelete\r\n                answerId={selectedAnswerId}\r\n                spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                userId={selectedUserId} // 유저 ID 전달\r\n                onClose={onClose}\r\n              ></ADelete>\r\n            )}\r\n            {/* -- 등록불가 팝업 */}\r\n            {cantModal && <CantModal onClose={onClose}></CantModal>}\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n      {answerModal && (\r\n        <AnswerRegister\r\n          CloseAnswerModal={closeAnswerModal}\r\n          currentUserInfo={currentUserInfo}\r\n          questionId={selectedQuestionId}\r\n          sentUserId={selectedQuestionUserId}\r\n          sentUserPic={selectedQuestionUserPic}\r\n          questionText={selectedQuestionText}\r\n        ></AnswerRegister>\r\n      )}\r\n      {loading && <Loading />}\r\n      <div ref={spinnerRef} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReceiveComment;\r\n\r\n// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\r\nfunction getTimeDifference(createdTime) {\r\n  return moment(createdTime).locale(\"ko\").fromNow();\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,cAAcA,CAAC;EAAEC,OAAO;EAAEC;AAAgB,CAAC,EAAE;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5D;EACA,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAM,CAACoC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAElD;EACA,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC/C;EACA,MAAM,CAAC0C,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EACnD;EACA,MAAM,CAAC4C,SAAS,EAAEC,YAAY,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAACgD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACA,MAAM,CAACkD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAM,CAACoD,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACsD,uBAAuB,EAAEC,sBAAsB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACwD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;;EAEpE;EACA,MAAM,CAAC0D,eAAe,EAAEC,kBAAkB,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4D,cAAc,EAAEC,iBAAiB,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM,CAAC8D,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACgE,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;;EAEtE;EACA,MAAM,CAACkE,UAAU,EAAEC,aAAa,CAAC,GAAGnE,QAAQ,CAAC;IAC3CoE,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAAA,CAAOC,cAAc,GAAG,IAAI,KAAK;IACjD,IAAI;MACF7C,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,IAAI6C,cAAc,EAAE;QAClBjD,OAAO,CAAC,CAAC,CAAC;MACZ;MAEA,MAAMkD,OAAO,GAAG,MAAM/D,YAAY,CAACU,OAAO,CAAC;MAC3C,MAAMsD,QAAQ,GAAG,MAAMjE,mBAAmB,CAACW,OAAO,EAAEE,IAAI,EAAEE,QAAQ,CAAC;MAEnE,MAAMmD,WAAW,GAAGH,cAAc,GAC9BE,QAAQ,CAACE,IAAI,GACb,CAAC,GAAG5C,gBAAgB,EAAE,GAAG0C,QAAQ,CAACE,IAAI,CAAC;MAC3C3C,mBAAmB,CAAC0C,WAAW,CAAC;MAChCR,aAAa,CAACM,OAAO,CAAC;;MAEtB;MACA,MAAMI,mBAAmB,GAAGF,WAAW,CAACG,GAAG,CAAC,MAAM,KAAK,CAAC;MACxD3C,eAAe,CAAC0C,mBAAmB,CAAC;MACpCxC,iBAAiB,CAACwC,mBAAmB,CAAC;MACtCtC,cAAc,CAACsC,mBAAmB,CAAC;;MAEnC;MACA,IAAIH,QAAQ,CAACE,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;QAC9BlD,iBAAiB,CAAC,IAAI,CAAC;MACzB;MAEAF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOqD,KAAK,EAAE;MACdrD,UAAU,CAAC,KAAK,CAAC;MACjBsD,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,UAAU,GAAGhF,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACdsE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACnD,OAAO,EAAEI,QAAQ,CAAC,CAAC;EAEvBvB,SAAS,CAAC,MAAM;IACd,MAAMkF,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACrD,gBAAgB,IAAI,CAACF,cAAc,EAAE;QACxCG,mBAAmB,CAAC,IAAI,CAAC;QAEzB,MAAM2C,QAAQ,GAAG,MAAMjE,mBAAmB,CAACW,OAAO,EAAEE,IAAI,GAAG,CAAC,EAAEE,QAAQ,CAAC;QAEvEO,mBAAmB,CAAC,KAAK,CAAC;QAE1B,IAAI2C,QAAQ,CAACE,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;UAC9BlD,iBAAiB,CAAC,IAAI,CAAC;UACvB,OAAO,CAAC;QACV;QAEAI,mBAAmB,CAAEmD,QAAQ,IAAK,CAChC,GAAGA,QAAQ,EACX,GAAGV,QAAQ,CAACE,IAAI,CAACE,GAAG,CAAEO,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEC,GAAG,EAAED,IAAI,CAACE;QAAG,CAAC,CAAC,CAAC,CAC5D,CAAC;QACFhE,OAAO,CAAEiE,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACrC;IACF,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAO;MAC9B,MAAME,YAAY,GAAGD,MAAM,CAACE,WAAW;MACvC,MAAMC,aAAa,GAAGC,QAAQ,CAACC,IAAI,CAACC,YAAY;MAEhD,IAAIP,OAAO,IAAII,aAAa,GAAGF,YAAY,GAAG,GAAG,EAAE;QACjDT,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC;IAEDQ,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAET,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXE,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAEV,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACrE,OAAO,EAAEE,IAAI,EAAEE,QAAQ,EAAEI,cAAc,EAAEE,gBAAgB,CAAC,CAAC;;EAE/D;EACA,MAAMsE,SAAS,GAAIC,KAAK,IAAK;IAC3BtC,wBAAwB,CAAEuC,SAAS,IACjCA,SAAS,KAAKD,KAAK,GAAG,IAAI,GAAGA,KAC/B,CAAC;IACDpC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;IAChC9B,eAAe,CAAEoE,UAAU,IAAK;MAC9B,MAAMC,SAAS,GAAG,CAAC,GAAGD,UAAU,CAAC;MACjCC,SAAS,CAACH,KAAK,CAAC,GAAG,CAACG,SAAS,CAACH,KAAK,CAAC;MACpC,OAAOG,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,WAAW,GAAIJ,KAAK,IAAK;IAC7BpC,wBAAwB,CAAEqC,SAAS,IACjCA,SAAS,KAAKD,KAAK,GAAG,IAAI,GAAGA,KAC/B,CAAC;IACDtC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;IAChC1B,iBAAiB,CAAEkE,UAAU,IAAK;MAChC,MAAMC,SAAS,GAAG,CAAC,GAAGD,UAAU,CAAC;MACjCC,SAAS,CAACH,KAAK,CAAC,GAAG,CAACG,SAAS,CAACH,KAAK,CAAC;MACpC,OAAOG,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,WAAW,GAAIL,KAAK,IAAK;IAC7B9D,cAAc,CAAEgE,UAAU,IAAK;MAC7B,MAAMC,SAAS,GAAG,CAAC,GAAGD,UAAU,CAAC;MACjCC,SAAS,CAACH,KAAK,CAAC,GAAG,CAACG,SAAS,CAACH,KAAK,CAAC;MACpC,OAAOG,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMG,YAAY,GAAGA,CAACC,UAAU,EAAExF,OAAO,EAAEgD,MAAM,KAAK;IACpD;IACAjC,eAAe,CAAC,EAAE,CAAC;IACnBgB,qBAAqB,CAACyD,UAAU,CAAC,CAAC,CAAC;IACnCjD,kBAAkB,CAACvC,OAAO,CAAC,CAAC,CAAC;IAC7ByC,iBAAiB,CAACO,MAAM,CAAC,CAAC,CAAC;IAC3B3B,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAMoE,cAAc,GAAGA,CAACC,QAAQ,EAAE1F,OAAO,EAAEgD,MAAM,KAAK;IACpDnB,mBAAmB,CAAC6D,QAAQ,CAAC,CAAC,CAAC;IAC/BnD,kBAAkB,CAACvC,OAAO,CAAC,CAAC,CAAC;IAC7ByC,iBAAiB,CAACO,MAAM,CAAC,CAAC,CAAC;IAC3BzB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMoE,aAAa,GAAGA,CAAA,KAAM;IAC1BlE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMmE,OAAO,GAAIC,CAAC,IAAK;IACrBxE,WAAW,CAAC,KAAK,CAAC;IAClBE,aAAa,CAAC,KAAK,CAAC;IACpBE,YAAY,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,MAAMqE,eAAe,GAAGA,CACtBN,UAAU,EACVO,UAAU,EACVC,WAAW,EACXC,YAAY,KACT;IACHtE,cAAc,CAAC,IAAI,CAAC;IACpBI,qBAAqB,CAACyD,UAAU,CAAC,CAAC,CAAC;IACnCvD,yBAAyB,CAAC8D,UAAU,CAAC,CAAC,CAAC;IACvC5D,sBAAsB,CAAC6D,WAAW,CAAC,CAAC,CAAC;IACrC3D,uBAAuB,CAAC4D,YAAY,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BvE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEhD,KAAA,CAAAwH,aAAA,CAAAxH,KAAA,CAAAyH,QAAA,QACGxF,gBAAgB,IAAIA,gBAAgB,CAAC+C,MAAM,KAAK,CAAC,iBAChDhF,KAAA,CAAAwH,aAAA,CAAAxH,KAAA,CAAAyH,QAAA,qBACCzH,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBhI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BhI,KAAA,CAAAwH,aAAA;IAAKS,GAAG,EAAEhH,QAAS;IAACiH,GAAG,EAAC,UAAU;IAACR,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC5D,CAAC,eACNhI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBhI,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iCAAS,CAAC,eACtChI,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAM,CAAC,eAC9BhI,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oJAE3B,CACA,CACF,CACL,CACH,EACA/F,gBAAgB,CAACkG,KAAK,CAAC,CAAC,CAACpD,GAAG,CAAC,CAACqD,QAAQ,EAAE9B,KAAK,kBAC5CtG,KAAA,CAAAwH,aAAA,CAACxH,KAAK,CAACyH,QAAQ;IAAClC,GAAG,EAAE6C,QAAQ,CAAC5C,EAAG;IAAAmC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BhI,KAAA,CAAAwH,aAAA;IACEjC,GAAG,EAAE6C,QAAQ,CAAC5C,EAAG;IACjBkC,SAAS,EACPU,QAAQ,CAACC,OAAO,CAACrD,MAAM,GAAG,CAAC,GACvB,0BAA0B,GAC1B,KACL;IAAA2C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEDhI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BhI,KAAA,CAAAwH,aAAA;IACES,GAAG,EAAEG,QAAQ,CAACf,WAAY;IAC1Ba,GAAG,EAAC,UAAU;IACdR,SAAS,EAAG,cACVU,QAAQ,CAACE,WAAW,GAAG,WAAW,GAAG,EACtC,EAAE;IACHC,OAAO,EAAEA,CAAA,KAAM;MACb,IAAI,CAACH,QAAQ,CAACE,WAAW,EAAE;QACzB1C,MAAM,CAAC4C,QAAQ,CAACC,IAAI,GAAI,IAAGL,QAAQ,CAACM,aAAc,EAAC;MACrD;IACF,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACE,CAAC,eACNhI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBhI,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEI,QAAQ,CAAC/D,MAAU,CAAC,eAC5CrE,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEW,iBAAiB,CAACP,QAAQ,CAACQ,WAAW,CAAK,CAAC,eAChE5I,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEI,QAAQ,CAACd,YAAgB,CAAC,eACrDtH,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnBI,QAAQ,CAACC,OAAO,CAACrD,MAAM,GAAG,CAAC,GAC1BoD,QAAQ,CAACS,eAAe,KAAKvH,eAAe,CAAC+C,MAAM,iBACjDrE,KAAA,CAAAwH,aAAA;IACES,GAAG,EAAE1H,OAAQ;IACb2H,GAAG,EAAC,SAAS;IACbR,SAAS,EAAC,MAAM;IAChBa,OAAO,EAAEvB,aAAc;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CACF,gBAEDhI,KAAA,CAAAwH,aAAA,CAAAxH,KAAA,CAAAyH,QAAA,QACGnG,eAAe,CAAC+C,MAAM,KAAKF,UAAU,CAACE,MAAM,GAC3C,EAAE,gBAEFrE,KAAA,CAAAwH,aAAA;IACES,GAAG,EAAE1H,OAAQ;IACb2H,GAAG,EAAC,SAAS;IACbR,SAAS,EAAC,MAAM;IAChBa,OAAO,EAAEA,CAAA,KACPpB,eAAe,CACbiB,QAAQ,CAAC5C,EAAE,EACX4C,QAAQ,CAAC/D,MAAM,EACf+D,QAAQ,CAACf,WAAW,EACpBe,QAAQ,CAACd,YACX,CACD;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACF,CAEH,CAED,CAAC,eAMNhI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClB1G,eAAe,CAAC+C,MAAM,KAAKF,UAAU,CAACE,MAAM,IAC7C/C,eAAe,CAAC+C,MAAM,KAAK+D,QAAQ,CAACM,aAAa,gBAC/C1I,KAAA,CAAAwH,aAAA;IAAKS,GAAG,EAAE5H,IAAK;IAAC6H,GAAG,EAAC,MAAM;IAACK,OAAO,EAAEA,CAAA,KAAMlC,SAAS,CAACC,KAAK,CAAE;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,GAE9D,EACD,EACA7F,YAAY,CAACmE,KAAK,CAAC,iBAClBtG,KAAA,CAAAwH,aAAA;IACEE,SAAS,EAAC,KAAK;IACfa,OAAO,EAAEA,CAAA,KACP3B,YAAY,CAACwB,QAAQ,CAAC5C,EAAE,EAAEnE,OAAO,EAAEC,eAAe,CAAC+C,MAAM,CAC1D;IAAAsD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEDhI,KAAA,CAAAwH,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEhI,KAAA,CAAAwH,aAAA;IAAKS,GAAG,EAAE3H,GAAI;IAAC4H,GAAG,EAAC,MAAM;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,4BAE3B,CACA,CAEJ,CACF,CACF,CAAC,eAENhI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrChI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzBI,QAAQ,CAACC,OAAO,CAACrD,MAAM,KAAK,CAAC,gBAC5BhF,KAAA,CAAAwH,aAAA;IACES,GAAG,EAAE9D,UAAU,CAACG,OAAQ;IACxB4D,GAAG,EAAC,UAAU;IACdR,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CAAC,gBAEFhI,KAAA,CAAAwH,aAAA;IACES,GAAG,EAAE9D,UAAU,CAACG,OAAQ;IACxB4D,GAAG,EAAC,UAAU;IACdR,SAAS,EAAC,YAAY;IACtBa,OAAO,EAAEA,CAAA,KAAM;MACb,IAAIlH,OAAO,KAAK+G,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAAChE,MAAM,CAACyE,QAAQ,CAAC,CAAC,EAAE;QACrDlD,MAAM,CAAC4C,QAAQ,CAACC,IAAI,GAAI,IAAGL,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAAChE,MAAO,EAAC;MACzD;IACF,CAAE;IAAAsD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAEA,CAAC,eACNhI,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjBI,QAAQ,CAACC,OAAO,CAACrD,MAAM,KAAK,CAAC,gBAC5BhF,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE7D,UAAU,CAACI,IAAQ,CAAC,gBAEjDvE,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE7D,UAAU,CAACI,IAAQ,CAC5C,EAEA6D,QAAQ,CAACC,OAAO,CAACrD,MAAM,KAAK,CAAC,gBAC5BhF,KAAA,CAAAwH,aAAA,CAAC5G,cAAc;IAAA+G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAiB,CAAC,gBAEjChI,KAAA,CAAAwH,aAAA,CAAAxH,KAAA,CAAAyH,QAAA,qBACEzH,KAAA,CAAAwH,aAAA;IAAGE,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACfW,iBAAiB,CAACP,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAACO,WAAW,CACjD,CAAC,eACJ5I,KAAA,CAAAwH,aAAA,CAAChH,eAAe;IACduI,QAAQ,EAAEX,QAAS;IACnBC,OAAO,EAAED,QAAQ,CAACC,OAAQ;IAC1B/G,eAAe,EAAEA,eAAgB;IAAAqG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClC,CACD,CACH,EAEAI,QAAQ,CAACC,OAAO,CAACrD,MAAM,KAAK,CAAC,GAC5B,EAAE,gBAEFhF,KAAA,CAAAwH,aAAA,CAAAxH,KAAA,CAAAyH,QAAA,qBACEzH,KAAA,CAAAwH,aAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClB1G,eAAe,CAAC+C,MAAM,KAAK+D,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAAChE,MAAM,gBACpDrE,KAAA,CAAAwH,aAAA;IACES,GAAG,EAAE5H,IAAK;IACV6H,GAAG,EAAC,MAAM;IACVK,OAAO,EAAEA,CAAA,KAAM7B,WAAW,CAACJ,KAAK,CAAE;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnC,CAAC,GAEF,EACD,EAEA3F,cAAc,CAACiE,KAAK,CAAC,iBACpBtG,KAAA,CAAAwH,aAAA;IACEE,SAAS,EAAC,KAAK;IACfa,OAAO,EAAEA,CAAA,KACPzB,cAAc,CACZsB,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC7C,EAAE,EACtBnE,OAAO,EACPC,eAAe,CAAC+C,MAClB,CACD;IAAAsD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEDhI,KAAA,CAAAwH,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEhI,KAAA,CAAAwH,aAAA;IAAKS,GAAG,EAAE3H,GAAI;IAAC4H,GAAG,EAAC,MAAM;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,4BAE3B,CACA,CAEJ,CACL,CAED,CAAC,EAGLvF,QAAQ,iBACPzC,KAAA,CAAAwH,aAAA,CAAC/G,MAAM;IACLoG,UAAU,EAAE1D,kBAAmB;IAC/B9B,OAAO,EAAEsC,eAAgB,CAAC;IAAA;IAC1BU,MAAM,EAAER,cAAe,CAAC;IAAA;IACxBoD,OAAO,EAAEA,OAAQ;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACV,CACV,EAEArF,UAAU,iBACT3C,KAAA,CAAAwH,aAAA,CAACzG,OAAO;IACNgG,QAAQ,EAAE9D,gBAAiB;IAC3B5B,OAAO,EAAEsC,eAAgB,CAAC;IAAA;IAC1BU,MAAM,EAAER,cAAe,CAAC;IAAA;IACxBoD,OAAO,EAAEA,OAAQ;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CACX,EAEAnF,SAAS,iBAAI7C,KAAA,CAAAwH,aAAA,CAAC1G,SAAS;IAACmG,OAAO,EAAEA,OAAQ;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAY,CACnD,CACS,CACjB,CAAC,EACDjF,WAAW,iBACV/C,KAAA,CAAAwH,aAAA,CAAC3G,cAAc;IACbmI,gBAAgB,EAAEzB,gBAAiB;IACnCjG,eAAe,EAAEA,eAAgB;IACjCuF,UAAU,EAAE1D,kBAAmB;IAC/BiE,UAAU,EAAE/D,sBAAuB;IACnCgE,WAAW,EAAE9D,uBAAwB;IACrC+D,YAAY,EAAE7D,oBAAqB;IAAAkE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpB,CAClB,EACArG,OAAO,iBAAI3B,KAAA,CAAAwH,aAAA,CAACrG,OAAO;IAAAwG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvBhI,KAAA,CAAAwH,aAAA;IAAKyB,GAAG,EAAE9D,UAAW;IAAAwC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvB,CAAC;AAEP;AAEA,eAAe5G,cAAc;;AAE7B;AACA,SAASuH,iBAAiBA,CAACC,WAAW,EAAE;EACtC,OAAOxI,MAAM,CAACwI,WAAW,CAAC,CAACM,MAAM,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;AACnD"},"metadata":{},"sourceType":"module"}