{"ast":null,"code":"import axios from \"axios\";\nexport const deleteAnswer = async (spaceId, answerId, userId) => {\n  try {\n    console.log(`spaceId는 ${spaceId}, answerId는 ${answerId} , userId는 ${userId}`);\n    const path = `https://api-mumul.site/spaces/${spaceId}/${answerId}/${userId}/answer/delete`;\n    const response = await axios.delete(`https://api-mumul.site/spaces/${spaceId}/${answerId}/${userId}/answer/delete`, {\n      data: {\n        userId: userId,\n        spaceId: spaceId,\n        answerId: answerId\n      },\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    });\n    console.log(\"답변 삭제 response: \", response.data);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('에러의 응답:', error.response);\n      //do something\n    } else if (error.request) {\n      console.error('에러의 요청:', error.request);\n      //do something else\n    } else if (error.message) {\n      console.error('에러의 메시지:', error.message);\n      //do something other than the other two\n    }\n    return false;\n  }\n};","map":{"version":3,"names":["axios","deleteAnswer","spaceId","answerId","userId","console","log","path","response","delete","data","headers","Accept","Authorization","localStorage","getItem","error","request","message"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/api/Q&A/deleteAnswer.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const deleteAnswer = async (spaceId, answerId, userId) => {\r\n  try {\r\n  console.log(`spaceId는 ${spaceId}, answerId는 ${answerId} , userId는 ${userId}`);\r\n\r\n    const path = `https://api-mumul.site/spaces/${spaceId}/${answerId}/${userId}/answer/delete`;\r\n\r\n    const response = await axios.delete(\r\n      `https://api-mumul.site/spaces/${spaceId}/${answerId}/${userId}/answer/delete`\r\n      , {\r\n      data: {\r\n        userId: userId,\r\n        spaceId: spaceId,\r\n        answerId: answerId\r\n      },\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      },\r\n    }\r\n    );\r\n\r\n    console.log(\"답변 삭제 response: \", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n\r\n    if (error.response) {\r\n      console.error('에러의 응답:', error.response);\r\n      //do something\r\n\r\n  } else if (error.request) {\r\n      console.error('에러의 요청:', error.request);\r\n      //do something else\r\n\r\n  } else if (error.message) {\r\n      console.error('에러의 메시지:', error.message);\r\n      //do something other than the other two\r\n\r\n  }\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EAC/D,IAAI;IACJC,OAAO,CAACC,GAAG,CAAE,YAAWJ,OAAQ,eAAcC,QAAS,cAAaC,MAAO,EAAC,CAAC;IAE3E,MAAMG,IAAI,GAAI,iCAAgCL,OAAQ,IAAGC,QAAS,IAAGC,MAAO,gBAAe;IAE3F,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,MAAM,CAChC,iCAAgCP,OAAQ,IAAGC,QAAS,IAAGC,MAAO,gBAAe,EAC5E;MACFM,IAAI,EAAE;QACJN,MAAM,EAAEA,MAAM;QACdF,OAAO,EAAEA,OAAO;QAChBC,QAAQ,EAAEA;MACZ,CAAC;MACDQ,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MACzD;IACF,CACA,CAAC;IAEDV,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,QAAQ,CAACE,IAAI,CAAC;IAC9C,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IAEd,IAAIA,KAAK,CAACR,QAAQ,EAAE;MAClBH,OAAO,CAACW,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACR,QAAQ,CAAC;MACxC;IAEJ,CAAC,MAAM,IAAIQ,KAAK,CAACC,OAAO,EAAE;MACtBZ,OAAO,CAACW,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACC,OAAO,CAAC;MACvC;IAEJ,CAAC,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;MACtBb,OAAO,CAACW,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxC;IAEJ;IACE,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}