{"ast":null,"code":"import axios from \"axios\";\nexport const getSpaceInfo = async spaceId => {\n  try {\n    console.log(\"getspaceinfo: \", spaceId);\n    const path = `https://api-mumul.site/spaces/${spaceId}`;\n    const token = localStorage.getItem('token');\n    console.log(\"getSpaceInfo token: \", localStorage.getItem('token'));\n    if (spaceId === '') {\n      console.log(\"spaceInfo의 spaceId가 '' 여서 스페이스 못 불러옴;;\");\n      return false;\n    } else {\n      const response = await axios.get(`https://api-mumul.site/spaces/${spaceId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      });\n      if (response.status !== 200) {\n        throw new Error('bad server condition');\n      }\n      console.log(\"getSpaceInfo 데이터: \", response.data);\n      return response.data;\n    }\n  } catch (e) {\n    console.error('getSpaceInfo Error: ', e.message);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","getSpaceInfo","spaceId","console","log","path","token","localStorage","getItem","response","get","headers","Accept","Authorization","status","Error","data","e","error","message"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/api/getSpaceInfo.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getSpaceInfo = async (spaceId) => {\r\n  try {\r\n  console.log(\"getspaceinfo: \",spaceId);\r\n    const path = `https://api-mumul.site/spaces/${spaceId}`;\r\n    const token = localStorage.getItem('token');\r\n    console.log(\"getSpaceInfo token: \", localStorage.getItem('token'));\r\n\r\n   \r\n      if(spaceId ===''){\r\n        console.log(\"spaceInfo의 spaceId가 '' 여서 스페이스 못 불러옴;;\")\r\n        return false;\r\n      }else{\r\n        const response = await axios.get(`https://api-mumul.site/spaces/${spaceId}`,{\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n          }\r\n        });\r\n\r\n        if (response.status !== 200) {\r\n          throw new Error('bad server condition');\r\n        }\r\n\r\n        console.log(\"getSpaceInfo 데이터: \", response.data);\r\n\r\n      return response.data;\r\n      }\r\n\r\n    } catch(e) {\r\n        console.error('getSpaceInfo Error: ', e.message);\r\n        return false;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAI;IACJC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACF,OAAO,CAAC;IACnC,MAAMG,IAAI,GAAI,iCAAgCH,OAAQ,EAAC;IACvD,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CL,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAGhE,IAAGN,OAAO,KAAI,EAAE,EAAC;MACfC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrD,OAAO,KAAK;IACd,CAAC,MAAI;MACH,MAAMK,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,iCAAgCR,OAAQ,EAAC,EAAC;QAC1ES,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,MAAM,EAAE,kBAAkB;UAC1BC,aAAa,EAAE,SAAS,GAAGN,YAAY,CAACC,OAAO,CAAC,OAAO;QACzD;MACF,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEAZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,QAAQ,CAACO,IAAI,CAAC;MAElD,OAAOP,QAAQ,CAACO,IAAI;IACpB;EAEF,CAAC,CAAC,OAAMC,CAAC,EAAE;IACPd,OAAO,CAACe,KAAK,CAAC,sBAAsB,EAAED,CAAC,CAACE,OAAO,CAAC;IAChD,OAAO,KAAK;EAChB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}