{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import More from\"./../img/icon/icMore.png\";import Bin from\"./../img/icon/icBin.png\";import{getSpaceInfo}from\"../api/getSpaceInfo\";import Delete from\"./popup/QDelete\";import ADelete from\"./popup/ADelete\";import UntilAnswering from\"./UntilAnswering\";import AnonymousAnswer from\"./AnonymousAnswer\";import moment from\"moment\";import\"moment/locale/ko\";// 한국어\nimport AnswerBtn from\"./AnswerButton\";import Profile2 from\"./../img/Ellipse 104.png\";import Loading from\"./Loading\";import{getPSentComment}from\"../api/Q&A/getPSentComment\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SendComment(_ref){let{spaceId,info,currentUserInfo}=_ref;const[page,setPage]=useState(0);// 페이지 번호 상태값 추가\nconst[pageSize,setPageSize]=useState(5);// 페이지 크기 상태값 추가\nconst[loading,setLoading]=useState(false);// 로딩 상태값 추가\nconst[allDataFetched,setAllDataFetched]=useState(false);// 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\nconst[fetchingMoreData,setFetchingMoreData]=useState(false);const[sentComments,setSentComments]=useState([]);// 답변 삭제 상태값\nconst[a_deleteStates,a_setDeleteStates]=useState({});const[spaceOwner,setSpaceOwner]=useState({userId:\"\",picture:\"\",name:\"\"});// 질문 공유 상태값\nconst[shareStates,setShareStates]=useState({});//삭제 상태값\nconst[del,setDelete]=useState(false);//질문 삭제 모달 오픈 상태값\nconst[delModal,setDelModal]=useState(false);//답변 삭제 모달 오픈 상태값\nconst[a_delModal,a_setDelModal]=useState(false);// 선택한 질문의 고유 ID를 상태값에 저장\nconst[selectedQuestionId,setSelectedQuestionId]=useState([]);// 선택한 답변의 고유 ID를 상태값에 저장\nconst[selectedAnswerId,setSelectedAnswerId]=useState([]);const[selectedSpaceId,setSelectedSpaceId]=useState([]);const[selectedUserId,setSelectedUserId]=useState([]);// 질문 삭제 상태값\nconst[deleteStates,setDeleteStates]=useState({});// 익명질문만 존재값\nconst[hasOnlyAnonymousQuestions,setHasOnlyAnonymousQuestions]=useState(false);const fetchData=async function(){let isInitialFetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;try{setLoading(true);// isInitialFetch가 true일 경우에만 페이지 번호를 초기화\nif(isInitialFetch){setPage(0);}const spaInfo=await getSpaceInfo(spaceId);const response=await getPSentComment(spaceId,page,pageSize);const newComments=isInitialFetch?response.data:[...sentComments,...response.data];setSentComments(newComments);setSpaceOwner(spaInfo);// deleteStates 배열을 모든 질문에 대해 초기화\nconst initialDeleteStates=newComments.map(()=>false);setDeleteStates(initialDeleteStates);a_setDeleteStates(initialDeleteStates);setShareStates(initialDeleteStates);// 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\nif(response.data.length===0){setAllDataFetched(true);}//모든 질문이 익명 질문이면 변수 true로 설정\nconst hasOnlyAnonymousQuestions=response.data.length>0&&response.data.every(sent=>sent.isAnonymous===true);setHasOnlyAnonymousQuestions(hasOnlyAnonymousQuestions);setLoading(false);}catch(error){setLoading(false);console.error(\"Error fetching data: \",error);}};const spinnerRef=useRef(null);useEffect(()=>{fetchData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[spaceId,pageSize]);useEffect(()=>{const fetchDataOnScroll=async()=>{if(!fetchingMoreData&&!allDataFetched){setFetchingMoreData(true);const response=await getPSentComment(spaceId,page+1,pageSize);setFetchingMoreData(false);if(response.data.length===0){setAllDataFetched(true);return;// 더 이상 데이터를 불러올 필요가 없으므로 종료\n}setSentComments(prevData=>[...prevData,...response.data.map(item=>({...item,key:item.id}))]);setPage(prevPage=>prevPage+1);}};const handleScroll=()=>{const scrollY=window.scrollY;const windowHeight=window.innerHeight;const contentHeight=document.body.scrollHeight;if(scrollY>=contentHeight-windowHeight-200){fetchDataOnScroll();}};window.addEventListener(\"scroll\",handleScroll);return()=>{window.removeEventListener(\"scroll\",handleScroll);};},[spaceId,page,pageSize,allDataFetched,fetchingMoreData]);// 클릭한 질문에 대한 삭제 상태값 변경\nconst clickMore=index=>{setDeleteStates(prevStates=>{const newStates=[...prevStates];newStates[index]=!newStates[index];return newStates;});};// 클릭한 답변에 대한 삭제 상태값 변경\nconst clickMore_1=index=>{a_setDeleteStates(prevStates=>{const newStates=[...prevStates];newStates[index]=!newStates[index];return newStates;});};// 질문 삭제하기 클릭 시 모달 오픈\nconst showDelModal=(questionId,spaceId,userId)=>{setSelectedQuestionId(questionId);// 선택한 질문의 ID를 상태값에 저장\nsetSelectedSpaceId(spaceId);// 선택한 질문의 스페이스 ID를 상태값에 저장\nsetSelectedUserId(userId);// 선택한 질문의 유저 ID를 상태값에 저장\nsetDelModal(true);};// 답변 삭제하기 클릭 시 모달 오픈\nconst a_showDelModal=(answerId,spaceId,userId)=>{setSelectedAnswerId(answerId);// 선택한 질문의 ID를 상태값에 저장\nsetSelectedSpaceId(spaceId);// 선택한 질문의 스페이스 ID를 상태값에 저장\nsetSelectedUserId(userId);// 선택한 질문의 유저 ID를 상태값에 저장\na_setDelModal(true);};// 삭제 팝업  닫기\nconst onClose=()=>{setDelModal(false);setDelete(false);a_setDelModal(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[sentComments.length===0&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"placeholder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profileArea\",children:/*#__PURE__*/_jsx(\"img\",{src:spaceOwner.picture,alt:\"profile1\",className:\"pre_questioner\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cnt\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"pre_Nickname\",children:spaceOwner.name}),/*#__PURE__*/_jsx(\"p\",{className:\"pre_min\",children:\"\\uC5B8\\uC820\\uAC00\"}),/*#__PURE__*/_jsx(\"p\",{className:\"pre_commentCnt\",children:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"link\",children:\"\\uBCF4\\uB0B8 \\uC9C8\\uBB38\\uC774 \\uC5C6\\uC5B4\\uC694\\uD83E\\uDD16 \\uCCAB \\uBB34\\uBB3C\\uC744 \\uB0A8\\uACA8 \\uBCF4\\uC138\\uC694!\"})})]})]})}),hasOnlyAnonymousQuestions&&/*#__PURE__*/_jsx(_Fragment,{children:currentUserInfo.userId!==spaceOwner.userId?/*#__PURE__*/_jsxs(\"div\",{className:\"pre commentWrap questionWrap\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profileArea\",children:/*#__PURE__*/_jsx(\"img\",{src:spaceOwner.picture,alt:\"profile1\",className:\"pre_questioner\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cnt\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"pre_Nickname\",children:spaceOwner.name}),/*#__PURE__*/_jsx(\"p\",{className:\"pre_min\",children:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"link\",children:\"\\uC5B8\\uC820\\uAC00\\uD83D\\uDD12\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"pre_commentCnt\",children:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"link\",children:\"\\uBCF4\\uB0B8 \\uC9C8\\uBB38\\uC774 \\uC5C6\\uC5B4\\uC694\\uD83E\\uDD16 \\uCCAB \\uBB34\\uBB3C\\uC744 \\uB0A8\\uACA8 \\uBCF4\\uC138\\uC694!\"})})]})]}):null}),sentComments.slice().filter(sent=>{// 현재 로그인한 유저가 질문 보낸 유저가 아니라면\nif(currentUserInfo.userId!==sent.sendingUserId){// isAnonymous가 false인 sent만 반환\nreturn sent.isAnonymous===false;}return true;}).map((sent,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:sent.answers.length>0?\"commentWrap questionWrap\":\"pre\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profileArea\",children:/*#__PURE__*/_jsx(\"img\",{src:sent.sentUserPic,alt:\"profile1\",className:\"questioner \".concat(sent.isAnonymous?\"anonymous\":\"\"),onClick:()=>{if(spaceId!==sent.sendingUserId.toString()){window.location.href=\"/\".concat(sent.sendingUserId);}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cnt\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"Nicname\",children:sent.userId}),/*#__PURE__*/_jsx(\"p\",{className:\"min\",children:getTimeDifference(sent.createdTime)}),/*#__PURE__*/_jsxs(\"p\",{className:\"commentCnt\",children:[\" \",sent.questionText,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"more\",children:[currentUserInfo.userId===spaceOwner.userId||currentUserInfo.userId===sent.sendingUserId?/*#__PURE__*/_jsx(\"img\",{src:More,alt:\"more\",onClick:()=>clickMore(index)}):\"\",deleteStates[index]&&/*#__PURE__*/_jsx(\"div\",{className:\"del\",onClick:()=>showDelModal(sent.id,spaceId,currentUserInfo.userId),children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"img\",{src:Bin,alt:\"btin\"}),\"\\uC0AD\\uC81C\\uD558\\uAE30\"]})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"commentWrap answerWrap\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profileArea\",children:sent.answers.length===0?/*#__PURE__*/_jsx(\"img\",{src:sent.receivedUserPic,alt:\"profile2\",className:\"pre_questioner\",onClick:()=>window.location.href=\"/\".concat(sent.receivingUserId)}):/*#__PURE__*/_jsx(\"img\",{src:sent.receivedUserPic,alt:\"profile2\",className:\"respondent\",onClick:()=>window.location.href=\"/\".concat(sent.answers[0].userId)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cnt\",children:[sent.answers.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"pre_Nickname\",children:sent.receivedUserName}):/*#__PURE__*/_jsx(\"p\",{className:\"Nicname\",children:sent.receivedUserName}),sent.answers.length===0?/*#__PURE__*/_jsx(UntilAnswering,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"min\",children:getTimeDifference(sent.answers[0].createdTime)}),/*#__PURE__*/_jsx(AnonymousAnswer,{question:sent,answers:sent.answers,currentUserInfo:currentUserInfo})]}),sent.answers.length===0?\"\":/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"more\",children:[currentUserInfo.userId===sent.answers[0].userId?/*#__PURE__*/_jsx(\"img\",{src:More,alt:\"more\",onClick:()=>clickMore_1(index)}):\"\",a_deleteStates[index]&&/*#__PURE__*/_jsx(\"div\",{className:\"del\",onClick:()=>a_showDelModal(sent.answers[0].id,spaceId,currentUserInfo.userId),children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"img\",{src:Bin,alt:\"btin\"}),\"\\uC0AD\\uC81C\\uD558\\uAE30\"]})})]})})]}),delModal&&/*#__PURE__*/_jsx(Delete,{questionId:selectedQuestionId,spaceId:selectedSpaceId// 스페이스 ID 전달\n,userId:selectedUserId// 유저 ID 전달\n,onClose:onClose}),a_delModal&&/*#__PURE__*/_jsx(ADelete,{answerId:selectedAnswerId,spaceId:selectedSpaceId// 스페이스 ID 전달\n,userId:selectedUserId// 유저 ID 전달\n,onClose:onClose})]})]},sent.id)),loading&&/*#__PURE__*/_jsx(Loading,{}),/*#__PURE__*/_jsx(\"div\",{ref:spinnerRef})]});}export default SendComment;// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\nfunction getTimeDifference(createdTime){return moment(createdTime).locale(\"ko\").fromNow();}","map":{"version":3,"names":["React","useState","useEffect","useRef","More","Bin","getSpaceInfo","Delete","ADelete","UntilAnswering","AnonymousAnswer","moment","AnswerBtn","Profile2","Loading","getPSentComment","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SendComment","_ref","spaceId","info","currentUserInfo","page","setPage","pageSize","setPageSize","loading","setLoading","allDataFetched","setAllDataFetched","fetchingMoreData","setFetchingMoreData","sentComments","setSentComments","a_deleteStates","a_setDeleteStates","spaceOwner","setSpaceOwner","userId","picture","name","shareStates","setShareStates","del","setDelete","delModal","setDelModal","a_delModal","a_setDelModal","selectedQuestionId","setSelectedQuestionId","selectedAnswerId","setSelectedAnswerId","selectedSpaceId","setSelectedSpaceId","selectedUserId","setSelectedUserId","deleteStates","setDeleteStates","hasOnlyAnonymousQuestions","setHasOnlyAnonymousQuestions","fetchData","isInitialFetch","arguments","length","undefined","spaInfo","response","newComments","data","initialDeleteStates","map","every","sent","isAnonymous","error","console","spinnerRef","fetchDataOnScroll","prevData","item","key","id","prevPage","handleScroll","scrollY","window","windowHeight","innerHeight","contentHeight","document","body","scrollHeight","addEventListener","removeEventListener","clickMore","index","prevStates","newStates","clickMore_1","showDelModal","questionId","a_showDelModal","answerId","onClose","children","className","src","alt","role","slice","filter","sendingUserId","answers","sentUserPic","concat","onClick","toString","location","href","getTimeDifference","createdTime","questionText","receivedUserPic","receivingUserId","receivedUserName","question","ref","locale","fromNow"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/component/SendComment.js"],"sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport More from \"./../img/icon/icMore.png\";\r\nimport Bin from \"./../img/icon/icBin.png\";\r\nimport { getSpaceInfo } from \"../api/getSpaceInfo\";\r\nimport Delete from \"./popup/QDelete\";\r\nimport ADelete from \"./popup/ADelete\";\r\nimport UntilAnswering from \"./UntilAnswering\";\r\nimport AnonymousAnswer from \"./AnonymousAnswer\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\"; // 한국어\r\nimport AnswerBtn from \"./AnswerButton\";\r\nimport Profile2 from \"./../img/Ellipse 104.png\";\r\nimport Loading from \"./Loading\";\r\nimport { getPSentComment } from \"../api/Q&A/getPSentComment\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SendComment({ spaceId, info, currentUserInfo }) {\r\n  const [page, setPage] = useState(0); // 페이지 번호 상태값 추가\r\n  const [pageSize, setPageSize] = useState(5); // 페이지 크기 상태값 추가\r\n  const [loading, setLoading] = useState(false); // 로딩 상태값 추가\r\n  const [allDataFetched, setAllDataFetched] = useState(false); // 모든 데이터를 가져왔는지 여부를 나타내는 상태값 추가\r\n  const [fetchingMoreData, setFetchingMoreData] = useState(false);\r\n  const [sentComments, setSentComments] = useState([]);\r\n  // 답변 삭제 상태값\r\n  const [a_deleteStates, a_setDeleteStates] = useState({});\r\n\r\n  const [spaceOwner, setSpaceOwner] = useState({\r\n    userId: \"\",\r\n    picture: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  // 질문 공유 상태값\r\n  const [shareStates, setShareStates] = useState({});\r\n  //삭제 상태값\r\n  const [del, setDelete] = useState(false);\r\n\r\n  //질문 삭제 모달 오픈 상태값\r\n  const [delModal, setDelModal] = useState(false);\r\n  //답변 삭제 모달 오픈 상태값\r\n  const [a_delModal, a_setDelModal] = useState(false);\r\n\r\n  // 선택한 질문의 고유 ID를 상태값에 저장\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState([]);\r\n  // 선택한 답변의 고유 ID를 상태값에 저장\r\n  const [selectedAnswerId, setSelectedAnswerId] = useState([]);\r\n  const [selectedSpaceId, setSelectedSpaceId] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState([]);\r\n  // 질문 삭제 상태값\r\n  const [deleteStates, setDeleteStates] = useState({});\r\n\r\n  // 익명질문만 존재값\r\n  const [hasOnlyAnonymousQuestions, setHasOnlyAnonymousQuestions] =\r\n    useState(false);\r\n\r\n  const fetchData = async (isInitialFetch = true) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // isInitialFetch가 true일 경우에만 페이지 번호를 초기화\r\n      if (isInitialFetch) {\r\n        setPage(0);\r\n      }\r\n\r\n      const spaInfo = await getSpaceInfo(spaceId);\r\n      const response = await getPSentComment(spaceId, page, pageSize);\r\n\r\n      const newComments = isInitialFetch\r\n        ? response.data\r\n        : [...sentComments, ...response.data];\r\n      setSentComments(newComments);\r\n      setSpaceOwner(spaInfo);\r\n\r\n      // deleteStates 배열을 모든 질문에 대해 초기화\r\n      const initialDeleteStates = newComments.map(() => false);\r\n      setDeleteStates(initialDeleteStates);\r\n      a_setDeleteStates(initialDeleteStates);\r\n      setShareStates(initialDeleteStates);\r\n\r\n      // 모든 데이터를 불러온 경우에는 더 이상 데이터를 불러오지 않도록 설정\r\n      if (response.data.length === 0) {\r\n        setAllDataFetched(true);\r\n      }\r\n\r\n      //모든 질문이 익명 질문이면 변수 true로 설정\r\n      const hasOnlyAnonymousQuestions =\r\n        response.data.length > 0 &&\r\n        response.data.every((sent) => sent.isAnonymous === true);\r\n      setHasOnlyAnonymousQuestions(hasOnlyAnonymousQuestions);\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching data: \", error);\r\n    }\r\n  };\r\n\r\n  const spinnerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [spaceId, pageSize]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataOnScroll = async () => {\r\n      if (!fetchingMoreData && !allDataFetched) {\r\n        setFetchingMoreData(true);\r\n\r\n        const response = await getPSentComment(spaceId, page + 1, pageSize);\r\n\r\n        setFetchingMoreData(false);\r\n\r\n        if (response.data.length === 0) {\r\n          setAllDataFetched(true);\r\n          return; // 더 이상 데이터를 불러올 필요가 없으므로 종료\r\n        }\r\n\r\n        setSentComments((prevData) => [\r\n          ...prevData,\r\n          ...response.data.map((item) => ({ ...item, key: item.id })),\r\n        ]);\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const scrollY = window.scrollY;\r\n      const windowHeight = window.innerHeight;\r\n      const contentHeight = document.body.scrollHeight;\r\n\r\n      if (scrollY >= contentHeight - windowHeight - 200) {\r\n        fetchDataOnScroll();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [spaceId, page, pageSize, allDataFetched, fetchingMoreData]);\r\n\r\n  // 클릭한 질문에 대한 삭제 상태값 변경\r\n  const clickMore = (index) => {\r\n    setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 클릭한 답변에 대한 삭제 상태값 변경\r\n  const clickMore_1 = (index) => {\r\n    a_setDeleteStates((prevStates) => {\r\n      const newStates = [...prevStates];\r\n      newStates[index] = !newStates[index];\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  // 질문 삭제하기 클릭 시 모달 오픈\r\n  const showDelModal = (questionId, spaceId, userId) => {\r\n    setSelectedQuestionId(questionId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    setDelModal(true);\r\n  };\r\n\r\n  // 답변 삭제하기 클릭 시 모달 오픈\r\n  const a_showDelModal = (answerId, spaceId, userId) => {\r\n    setSelectedAnswerId(answerId); // 선택한 질문의 ID를 상태값에 저장\r\n    setSelectedSpaceId(spaceId); // 선택한 질문의 스페이스 ID를 상태값에 저장\r\n    setSelectedUserId(userId); // 선택한 질문의 유저 ID를 상태값에 저장\r\n    a_setDelModal(true);\r\n  };\r\n\r\n  // 삭제 팝업  닫기\r\n  const onClose = () => {\r\n    setDelModal(false);\r\n    setDelete(false);\r\n    a_setDelModal(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {sentComments.length === 0 && (\r\n        <>\r\n         <div className=\"placeholder\">\r\n            <div className=\"profileArea\">\r\n              <img\r\n                src={spaceOwner.picture}\r\n                alt=\"profile1\"\r\n                className=\"pre_questioner\"\r\n              />\r\n            </div>\r\n            <div className=\"cnt\">\r\n              <p className=\"pre_Nickname\">{spaceOwner.name}</p>\r\n              <p className=\"pre_min\">언젠가</p>\r\n              <p className=\"pre_commentCnt\">\r\n              <span role=\"img\" aria-label=\"link\">\r\n                보낸 질문이 없어요🤖 첫 무물을 남겨 보세요!\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {hasOnlyAnonymousQuestions && (\r\n        <>\r\n          {currentUserInfo.userId !== spaceOwner.userId ? (\r\n            <div className=\"pre commentWrap questionWrap\">\r\n              <div className=\"profileArea\">\r\n                <img\r\n                  src={spaceOwner.picture}\r\n                  alt=\"profile1\"\r\n                  className=\"pre_questioner\"\r\n                />\r\n              </div>\r\n              <div className=\"cnt\">\r\n                <p className=\"pre_Nickname\">{spaceOwner.name}</p>\r\n                <p className=\"pre_min\">\r\n                <span role=\"img\" aria-label=\"link\">언젠가🔒</span></p>\r\n                <p className=\"pre_commentCnt\">\r\n                <span role=\"img\" aria-label=\"link\">\r\n                  보낸 질문이 없어요🤖 첫 무물을 남겨 보세요!\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      )}\r\n      {sentComments\r\n        .slice()\r\n        .filter((sent) => {\r\n          // 현재 로그인한 유저가 질문 보낸 유저가 아니라면\r\n          if (currentUserInfo.userId !== sent.sendingUserId) {\r\n            // isAnonymous가 false인 sent만 반환\r\n            return sent.isAnonymous === false;\r\n          }\r\n          return true;\r\n        })\r\n        .map((sent, index) => (\r\n          <React.Fragment key={sent.id}>\r\n            <div className={\r\n              sent.answers.length > 0\r\n                ? \"commentWrap questionWrap\"\r\n                : \"pre\"\r\n            }>\r\n              <div className=\"profileArea\">\r\n                <img\r\n                  src={sent.sentUserPic}\r\n                  alt=\"profile1\"\r\n                  className={`questioner ${\r\n                    sent.isAnonymous ? \"anonymous\" : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (spaceId !== sent.sendingUserId.toString()) {\r\n                      window.location.href = `/${sent.sendingUserId}`;\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cnt\">\r\n                <p className=\"Nicname\">{sent.userId}</p>\r\n                <p className=\"min\">{getTimeDifference(sent.createdTime)}</p>\r\n                <p className=\"commentCnt\"> {sent.questionText} </p>\r\n\r\n                <div className=\"more\">\r\n                  {currentUserInfo.userId === spaceOwner.userId ||\r\n                  currentUserInfo.userId === sent.sendingUserId ? (\r\n                    <img\r\n                      src={More}\r\n                      alt=\"more\"\r\n                      onClick={() => clickMore(index)}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {deleteStates[index] && (\r\n                    <div\r\n                      className=\"del\"\r\n                      onClick={() =>\r\n                        showDelModal(sent.id, spaceId, currentUserInfo.userId)\r\n                      }\r\n                    >\r\n                      <p>\r\n                        <img src={Bin} alt=\"btin\" />\r\n                        삭제하기\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"commentWrap answerWrap\">\r\n              <div className=\"profileArea\">\r\n                {sent.answers.length === 0 ? (\r\n                  <img\r\n                    src={sent.receivedUserPic}\r\n                    alt=\"profile2\"\r\n                    className=\"pre_questioner\"\r\n                    onClick={() =>\r\n                      (window.location.href = `/${sent.receivingUserId}`)\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={sent.receivedUserPic}\r\n                    alt=\"profile2\"\r\n                    className=\"respondent\"\r\n                    onClick={() =>\r\n                      (window.location.href = `/${sent.answers[0].userId}`)\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"cnt\">\r\n                {sent.answers.length === 0 ? (\r\n                  <p className=\"pre_Nickname\">{sent.receivedUserName}</p>\r\n                ) : (\r\n                  <p className=\"Nicname\">{sent.receivedUserName}</p>\r\n                )}\r\n\r\n                {sent.answers.length === 0 ? (\r\n                  <UntilAnswering></UntilAnswering>\r\n                ) : (\r\n                  <>\r\n                    <p className=\"min\">\r\n                      {getTimeDifference(sent.answers[0].createdTime)}\r\n                    </p>\r\n                    <AnonymousAnswer\r\n                      question={sent}\r\n                      answers={sent.answers}\r\n                      currentUserInfo={currentUserInfo}\r\n                    />\r\n                  </>\r\n                )}\r\n                {sent.answers.length === 0 ? (\r\n                  \"\"\r\n                ) : (\r\n                  <>\r\n                    <div className=\"more\">\r\n                      {currentUserInfo.userId === sent.answers[0].userId ? (\r\n                        <img\r\n                          src={More}\r\n                          alt=\"more\"\r\n                          onClick={() => clickMore_1(index)}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      {a_deleteStates[index] && (\r\n                        <div\r\n                          className=\"del\"\r\n                          onClick={() =>\r\n                            a_showDelModal(\r\n                              sent.answers[0].id,\r\n                              spaceId,\r\n                              currentUserInfo.userId\r\n                            )\r\n                          }\r\n                        >\r\n                          <p>\r\n                            <img src={Bin} alt=\"btin\" />\r\n                            삭제하기\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {/* 질문 삭제하기 팝업  */}\r\n              {delModal && (\r\n                <Delete\r\n                  questionId={selectedQuestionId}\r\n                  spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                  userId={selectedUserId} // 유저 ID 전달\r\n                  onClose={onClose}\r\n                ></Delete>\r\n              )}\r\n\r\n              {/* 답변 삭제하기 팝업  */}\r\n              {a_delModal && (\r\n                <ADelete\r\n                  answerId={selectedAnswerId}\r\n                  spaceId={selectedSpaceId} // 스페이스 ID 전달\r\n                  userId={selectedUserId} // 유저 ID 전달\r\n                  onClose={onClose}\r\n                ></ADelete>\r\n              )}\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      {loading && <Loading />}\r\n      <div ref={spinnerRef} />\r\n    </>\r\n  );\r\n}\r\n\r\nSendComment.propTypes = {\r\n  spaceId: PropTypes.string.isRequired,\r\n  info: PropTypes.object.isRequired,\r\n  currentUserInfo: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default SendComment;\r\n\r\n// 질문 등록 시간과 현재 시간 사이의 차이를 계산하는 함수\r\nfunction getTimeDifference(createdTime) {\r\n  return moment(createdTime).locale(\"ko\").fromNow();\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}