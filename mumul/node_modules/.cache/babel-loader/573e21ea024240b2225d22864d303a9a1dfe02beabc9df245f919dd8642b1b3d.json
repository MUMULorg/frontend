{"ast":null,"code":"import axios from \"axios\";\nexport const logoutUserToken = async () => {\n  try {\n    const response = await axios.post('https://api-mumul.site/v1/oauth/logout', null, {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    });\n    localStorage.removeItem('token');\n\n    // 응답이 성공적인지 확인\n    if (response.status !== 200) {\n      throw new Error('서버 상태가 이상합니다.');\n    }\n    return true;\n  } catch (error) {\n    if (error.response) {\n      console.error('에러의 응답:', error.response);\n      //do something\n    } else if (error.request) {\n      console.error('에러의 요청:', error.request);\n      //do something else\n    } else if (error.message) {\n      console.error('에러의 메시지:', error.message);\n      //do something other than the other two\n    }\n    return false;\n  }\n};","map":{"version":3,"names":["axios","logoutUserToken","response","post","headers","Accept","Authorization","localStorage","getItem","removeItem","status","Error","error","console","request","message"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/api/logoutUserToken.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const logoutUserToken = async () => {\r\n\r\n    try {\r\n        const response = await axios.post('https://api-mumul.site/v1/oauth/logout', null, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Accept: 'application/json',\r\n              Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        });\r\n        localStorage.removeItem('token');\r\n\r\n        // 응답이 성공적인지 확인\r\n        if (response.status !== 200) {\r\n            throw new Error('서버 상태가 이상합니다.');\r\n        }\r\n        \r\n     return true;\r\n    } catch (error) {\r\n        if (error.response) {\r\n            console.error('에러의 응답:', error.response);\r\n            //do something\r\n\r\n        } else if (error.request) {\r\n            console.error('에러의 요청:', error.request);\r\n            //do something else\r\n\r\n        } else if (error.message) {\r\n            console.error('에러의 메시지:', error.message);\r\n            //do something other than the other two\r\n\r\n        }\r\n        return false;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAEvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,IAAI,CAAC,wCAAwC,EAAE,IAAI,EAAE;MAC9EC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MACzD;IACJ,CAAC,CAAC;IACFD,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACA,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACzB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IAEH,OAAO,IAAI;EACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACV,QAAQ,EAAE;MAChBW,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACV,QAAQ,CAAC;MACxC;IAEJ,CAAC,MAAM,IAAIU,KAAK,CAACE,OAAO,EAAE;MACtBD,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACE,OAAO,CAAC;MACvC;IAEJ,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACtBF,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACG,OAAO,CAAC;MACxC;IAEJ;IACA,OAAO,KAAK;EAChB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}