{"ast":null,"code":"import * as React from 'react';\nimport { Platform, Text } from 'react-native';\nimport useLinkProps from './useLinkProps';\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link(_ref) {\n  let {\n    to,\n    action,\n    ...rest\n  } = _ref;\n  const props = useLinkProps({\n    to,\n    action\n  });\n  const onPress = e => {\n    if ('onPress' in rest) {\n      var _rest$onPress;\n      (_rest$onPress = rest.onPress) === null || _rest$onPress === void 0 ? void 0 : _rest$onPress.call(rest, e);\n    }\n    props.onPress(e);\n  };\n  return /*#__PURE__*/React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: {\n        onClick: onPress\n      },\n      default: {\n        onPress\n      }\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}