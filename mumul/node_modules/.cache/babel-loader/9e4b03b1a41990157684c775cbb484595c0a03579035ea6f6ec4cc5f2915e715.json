{"ast":null,"code":"import axios from \"axios\";\nimport baseUrl from \"./baseUrl\";\nexport const getUserInfo = async () => {\n  const path = 'https://api-mumul.site/v1/oauth/user/info';\n  const token = localStorage.getItem('token');\n  console.log(\"getUserInfo token: \", token);\n  try {\n    const response = await axios.get(path, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + `Bearer ${token}`\n      },\n      cache: 'no-cache' // 캐시를 비우는 옵션 추가\n    });\n    if (response.status !== 200) {\n      throw new Error('bad server condition');\n    }\n    console.log(\"getUserInfo 로그인 여부: \", response.data);\n    return response.data; // response.data로 수정\n  } catch (e) {\n    console.error('getUserInfo Error: ', e.message);\n    console.error('getUserInfo error Response:', e.response.data); // 에러 응답 확인\n    return false;\n  }\n};","map":{"version":3,"names":["axios","baseUrl","getUserInfo","path","token","localStorage","getItem","console","log","response","get","headers","Accept","Authorization","cache","status","Error","data","e","error","message"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/api/getUserInfo.js"],"sourcesContent":["import axios from \"axios\";\r\nimport baseUrl from \"./baseUrl\";\r\n\r\nexport const getUserInfo = async () => {\r\n  const path = 'https://api-mumul.site/v1/oauth/user/info';\r\n  const token = localStorage.getItem('token');\r\n  console.log(\"getUserInfo token: \", token);\r\n\r\n  try { \r\n    const response = await axios.get(path, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + `Bearer ${token}`,\r\n      },\r\n      cache: 'no-cache', // 캐시를 비우는 옵션 추가\r\n    })\r\n\r\n    if (response.status !== 200) {\r\n      throw new Error('bad server condition');\r\n    }\r\n    console.log(\"getUserInfo 로그인 여부: \", response.data);\r\n    return response.data; // response.data로 수정\r\n\r\n  } catch (e) {\r\n    console.error('getUserInfo Error: ', e.message);\r\n    console.error('getUserInfo error Response:', e.response.data); // 에러 응답 확인\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/B,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,IAAI,GAAG,2CAA2C;EACxD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,KAAK,CAAC;EAEzC,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACP,IAAI,EAAE;MACrCQ,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,kBAAkB;QAC5BC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAI,UAAST,KAAM;MAC7C,CAAC;MACDU,KAAK,EAAE,UAAU,CAAE;IACrB,CAAC,CAAC;IAEF,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACAT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACQ,IAAI,CAAC;IAClD,OAAOR,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAExB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVX,OAAO,CAACY,KAAK,CAAC,qBAAqB,EAAED,CAAC,CAACE,OAAO,CAAC;IAC/Cb,OAAO,CAACY,KAAK,CAAC,6BAA6B,EAAED,CAAC,CAACT,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;IAC/D,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}