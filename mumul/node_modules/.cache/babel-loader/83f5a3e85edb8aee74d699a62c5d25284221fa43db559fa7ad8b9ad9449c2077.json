{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\mumul_frontend\\\\mumul\\\\src\\\\component\\\\HealthCheck.js\",\n  _s = $RefreshSig$();\n// HealthCheck.js\nimport React, { useState, useEffect } from 'react';\nimport { healthCheck } from '../api/healthCheck'; // `yourHealthCheckModule`에 실제 모듈 위치를 지정해야 합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthCheck = () => {\n  _s();\n  const [isServerOnline, setServerOnline] = useState(false);\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      try {\n        await healthCheck(); // healthCheck 함수 호출\n        setServerOnline(true);\n      } catch (error) {\n        setServerOnline(false);\n      }\n    };\n    checkServerHealth();\n    const intervalId = setInterval(checkServerHealth, 5000); //5초 간격으로 헬스체크 \n\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isServerOnline ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC11C\\uBC84\\uAC00 \\uC628\\uB77C\\uC778 \\uC0C1\\uD0DC\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC11C\\uBC84\\uC5D0 \\uC5F0\\uACB0\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthCheck, \"I1upiJSMWXOw/yUVLRppGVPTOzQ=\");\n_c = HealthCheck;\nexport default HealthCheck;\nvar _c;\n$RefreshReg$(_c, \"HealthCheck\");","map":{"version":3,"names":["React","useState","useEffect","healthCheck","jsxDEV","_jsxDEV","HealthCheck","_s","isServerOnline","setServerOnline","checkServerHealth","error","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/mumul_frontend/mumul/src/component/HealthCheck.js"],"sourcesContent":["// HealthCheck.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { healthCheck } from '../api/healthCheck'; // `yourHealthCheckModule`에 실제 모듈 위치를 지정해야 합니다.\r\n\r\nconst HealthCheck = () => {\r\n  const [isServerOnline, setServerOnline] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkServerHealth = async () => {\r\n      try {\r\n        await healthCheck(); // healthCheck 함수 호출\r\n        setServerOnline(true);\r\n      } catch (error) {\r\n        setServerOnline(false);\r\n      }\r\n    };\r\n\r\n    checkServerHealth();\r\n    const intervalId = setInterval(checkServerHealth, 5000); //5초 간격으로 헬스체크 \r\n\r\n    return () => clearInterval(intervalId);\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isServerOnline ? (\r\n        <p>서버가 온라인 상태입니다.</p>\r\n      ) : (\r\n        <p>서버에 연결할 수 없습니다.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCheck;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMP,WAAW,CAAC,CAAC,CAAC,CAAC;QACrBM,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdF,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAEDC,iBAAiB,CAAC,CAAC;IACnB,MAAME,UAAU,GAAGC,WAAW,CAACH,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEzD,OAAO,MAAMI,aAAa,CAACF,UAAU,CAAC;EAExC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAU,QAAA,EACGP,cAAc,gBACbH,OAAA;MAAAU,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAErBd,OAAA;MAAAU,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BID,WAAW;AAAAc,EAAA,GAAXd,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}